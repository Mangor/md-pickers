{"version":3,"sources":["mdPickers.min.js"],"names":["compareValidator","value","format","otherDate","comparator","angular","isDate","moment","date","isValid","filterValidator","filter","isFunction","toDate","formatValidator","maxDateValidator","maxDate","currentMaxDate","isSameOrBefore","maxTimeValidator","maxTime","t","mt","minDateValidator","minDate","currentMinDate","isSameOrAfter","minTimeValidator","minTime","module","run","$templateCache","put","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","index","id","url","svg","mdpDatePickerProvider","LABEL_OK","LABEL_CANCEL","DISPLAY_FORMAT","PARENT_GETTER","this","setDisplayFormat","setOKButtonLabel","label","setCancelButtonLabel","setDialogParentGetter","fn","$get","$mdDialog","$mdpLocale","datePicker","currentDate","options","valueOf","isObject","displayFormat","labels","okLabel","cancelLabel","show","controller","controllerAs","clickOutsideToClose","templateUrl","targetEvent","locals","multiple","parent","provider","mdpTimePickerProvider","timePicker","time","autoSwitch","ampm","isDefined","useUtc","constant","factory","timeFormat","noFloat","openOnClick","clearOnCancel","dateFilter","dateFormat","directive","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","mdpDatePickerDirective","$mdpDatePicker","$timeout","require","transclude","scope","placeholder","disabled","inputName","link","post","attrs","controllers","$transclude","updateInputElement","inputElement","inputContainerCtrl","setHasValue","ngModel","$isEmpty","updateDate","strValue","utc","$setViewValue","$pristine","messages","hasClass","removeClass","$render","onInputElementEvents","event","target","$viewVaue","form","opts","querySelector","clone","append","type","model","isError","$invalid","$submitted","required","$formatters","unshift","strVal","$validators","modelValue","viewValue","isUndefined","$parsers","parsed","$modelValue","originalModel","year","month","showPicker","ev","then","error","on","$on","off","$watch","$validate","$inject","DatePickerDialogCtrl","$scope","$mdMedia","self","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","END","getItemAtIndex","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","animating","noop","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","$onInit","i","STEP_DEG","steps","CLOCK_TYPES","hours","range","minutes","f","push","selected","getPointerStyle","divider","degrees","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","mdpClockDirective","$animate","bindToController","replace","ctrl","pointer","timepickerCtrl","onEvent","containerCoords","x","y","$parent","timepicker","raised","currentTarget","getClientRects","offsetWidth","pageX","left","pageY","top","offsetHeight","atan2","PI","indexOf","switchView","e","TimePickerDialogCtrl","VIEW_HOURS","VIEW_MINUTES","currentView","hoursFormat","minutesFormat","clockHours","parseInt","clockMinutes","setAM","hour","setPM","mdpTimePickerDirective","$mdpTimePicker","updateTime","undefined","$error","newValue","oldValue","setInvalid","Object","keys","length","seconds","CalendarCtrl","getDaysInMonth","days","daysInMonth","firstDay","day","dow","weekDays","arr","enabled","isDayEnabled","selectDate","dom","nextMonth","prevMonth","subtract","updateDaysInMonth","localeData","firstDayOfWeek","concat","weekdaysMin","slice","unix","mdpCalendarDirective","animElements","map","a","direction","addClass"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\nangular.module('mdpTemplates', []).run(['$templateCache', function($templateCache) {$templateCache.put('mdpcalendar.directive.html','<div class=\"mdp-calendar\">\\r\\n  <div\\r\\n    layout=\"row\"\\r\\n    layout-align=\"space-between center\">\\r\\n    <md-button\\r\\n      aria-label=\"previous month\"\\r\\n      class=\"md-icon-button\"\\r\\n      ng-click=\"calendar.prevMonth()\">\\r\\n      <md-icon class=\"mdp-nav-icon\" md-svg-icon=\"mdp-chevron-left\"></md-icon>\\r\\n    </md-button>\\r\\n    <div\\r\\n      class=\"mdp-calendar-monthyear\"\\r\\n      ng-show=\"!calendar.animating\"\\r\\n      ng-bind=\"calendar.date.format(\\'MMMM YYYY\\')\">\\r\\n    </div>\\r\\n    <md-button\\r\\n      aria-label=\"next month\"\\r\\n      class=\"md-icon-button\"\\r\\n      ng-click=\"calendar.nextMonth()\">\\r\\n      <md-icon class=\"mdp-nav-icon\" md-svg-icon=\"mdp-chevron-right\"></md-icon>\\r\\n    </md-button>\\r\\n  </div>\\r\\n  <div\\r\\n    layout=\"row\"\\r\\n    layout-align=\"space-around center\"\\r\\n    class=\"mdp-calendar-week-days\"\\r\\n    ng-show=\"!calendar.animating\">\\r\\n    <div\\r\\n      layout\\r\\n      layout-align=\"center center\"\\r\\n      ng-repeat=\"d in calendar.weekDays track by $index\"\\r\\n      ng-bind=\"d\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <div\\r\\n    layout=\"row\"\\r\\n    layout-align=\"start center\"\\r\\n    layout-wrap\\r\\n    class=\"mdp-calendar-days\"\\r\\n    ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\"\\r\\n    ng-show=\"!calendar.animating\"\\r\\n    md-swipe-left=\"calendar.nextMonth()\"\\r\\n    md-swipe-right=\"calendar.prevMonth()\">\\r\\n    <div\\r\\n      layout\\r\\n      layout-align=\"center center\"\\r\\n      ng-repeat-start=\"day in calendar.daysInMonth track by $index\"\\r\\n      ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">\\r\\n      <md-button\\r\\n        class=\"md-icon-button\"\\r\\n        aria-label=\"Select day\"\\r\\n        ng-mouseenter=\"raised = true\"\\r\\n        ng-mouseleave=\"raised = false\"\\r\\n        ng-if=\"day\"\\r\\n        ng-class=\"{\\r\\n          \\'md-accent\\': calendar.date.date() == day.value,\\r\\n          \\'md-raised\\': raised || calendar.date.date() == day.value\\r\\n        }\"\\r\\n        ng-click=\"calendar.selectDate(day.value)\"\\r\\n        ng-disabled=\"!day.enabled\"\\r\\n        ng-bind=\"day.value\">\\r\\n      </md-button>\\r\\n    </div>\\r\\n    <div\\r\\n      flex=\"100\"\\r\\n      ng-if=\"($index + 1) % 7 == 0\"\\r\\n      ng-repeat-end></div>\\r\\n  </div>\\r\\n</div>\\r\\n');\r\n$templateCache.put('mdpClock.directive.html','<md-card class=\"mdp-clock\">\\r\\n  <div class=\"mdp-clock-container\">\\r\\n    <md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>\\r\\n    <md-toolbar\\r\\n      ng-style=\"clock.getPointerStyle()\"\\r\\n      class=\"mdp-pointer md-primary\">\\r\\n      <span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>\\r\\n    </md-toolbar>\\r\\n    <md-button\\r\\n      ng-class=\"{\\r\\n        \\'md-primary\\': clock.selected == step,\\r\\n        \\'md-raised\\': raised || clock.selected == step\\r\\n      }\"\\r\\n      ng-mouseenter=\"raised = true\"\\r\\n      ng-mouseleave=\"raised = false\"\\r\\n      class=\"md-icon-button mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\"\\r\\n      aria-label=\"{{step}}\"\\r\\n      ng-repeat=\"step in clock.steps\"\\r\\n      ng-click=\"clock.setTime(step)\"\\r\\n      ng-bind=\"step\"></md-button>\\r\\n  </div>\\r\\n</md-card>\\r\\n');\r\n$templateCache.put('mdpDatePicker.directive.html','<div layout layout-align=\"start start\">\\r\\n  <md-button\\r\\n    ng-disabled=\"{{ disabled }}\"\\r\\n    class=\"md-icon-button\"\\r\\n    ng-click=\"showPicker($event)\">\\r\\n    <md-icon class=\"mdp-nav-icon\" md-svg-icon=\"mdp-event\"></md-icon>\\r\\n  </md-button>\\r\\n  <md-input-container\\r\\n    md-no-float=\"!!noFloat\"\\r\\n    md-is-error=\"isError()\">\\r\\n    <input\\r\\n      type=\"{{ ::type }}\"\\r\\n      name=\"{{ inputName }}\"\\r\\n      ng-model=\"model.$viewValue\"\\r\\n      ng-required=\"required()\"\\r\\n      ng-disabled=\"{{ disabled }}\"\\r\\n      aria-label=\"{{ placeholder }}\"\\r\\n      placeholder=\"{{ placeholder }}\"\\r\\n      ng-click=\"showPicker($event)\"/>\\r\\n  </md-input-container>\\r\\n</div>\\r\\n');\r\n$templateCache.put('mdpDatePickerDialog.component.html','<md-dialog\\r\\n  aria-label=\"\"\\r\\n  class=\"mdp-datepicker\"\\r\\n  ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">\\r\\n  <md-dialog-content\\r\\n    layout=\"row\"\\r\\n    layout-wrap>\\r\\n    <div\\r\\n      layout=\"column\"\\r\\n      layout-align=\"start center\">\\r\\n      <md-toolbar\\r\\n        layout-align=\"start start\"\\r\\n        flex\\r\\n        class=\"mdp-datepicker-date-wrapper md-blue md-primary\"\\r\\n        layout=\"column\">\\r\\n        <span\\r\\n          class=\"mdp-datepicker-year\"\\r\\n          ng-click=\"datepicker.showYear()\"\\r\\n          ng-class=\"{ \\'active\\': datepicker.selectingYear }\"\\r\\n          ng-bind=\"datepicker.date.format(\\'YYYY\\')\">\\r\\n        </span>\\r\\n        <span\\r\\n          class=\"mdp-datepicker-date\"\\r\\n          ng-click=\"datepicker.showCalendar()\"\\r\\n          ng-class=\"{ \\'active\\': !datepicker.selectingYear }\"\\r\\n          ng-bind=\"datepicker.date.format(datepicker.displayFormat)\"></span>\\r\\n      </md-toolbar>\\r\\n    </div>\\r\\n    <div>\\r\\n      <div\\r\\n        class=\"mdp-datepicker-select-year mdp-animation-zoom\"\\r\\n        layout=\"column\"\\r\\n        layout-align=\"center start\"\\r\\n        ng-if=\"datepicker.selectingYear\">\\r\\n        <md-virtual-repeat-container\\r\\n          md-auto-shrink\\r\\n          md-top-index=\"datepicker.yearTopIndex\">\\r\\n          <div\\r\\n            flex\\r\\n            md-virtual-repeat=\"item in datepicker.yearItems\"\\r\\n            md-on-demand\\r\\n            class=\"repeated-year\">\\r\\n            <span\\r\\n              class=\"md-button\"\\r\\n              ng-click=\"datepicker.selectYear(item)\"\\r\\n              md-ink-ripple\\r\\n              ng-class=\"{ \\'md-primary md-blue current\\': item == year }\"\\r\\n              ng-bind=\"item\"></span>\\r\\n          </div>\\r\\n        </md-virtual-repeat-container>\\r\\n      </div>\\r\\n      <mdp-calendar\\r\\n        ng-if=\"!datepicker.selectingYear\"\\r\\n        class=\"mdp-animation-zoom\"\\r\\n        date=\"datepicker.date\"\\r\\n        min-date=\"datepicker.minDate\"\\r\\n        date-filter=\"datepicker.dateFilter\"\\r\\n        max-date=\"datepicker.maxDate\"></mdp-calendar>\\r\\n      <md-dialog-actions layout=\"row\" class=\"mdp-btn-group\">\\r\\n        <span flex></span>\\r\\n        <md-button\\r\\n          ng-click=\"datepicker.cancel()\"\\r\\n          class=\"button\"\\r\\n          aria-label=\"{{datepicker.labels.cancelLabel}}\">\\r\\n          <span ng-bind=\"datepicker.labels.cancelLabel\"></span>\\r\\n        </md-button>\\r\\n        <md-button\\r\\n          ng-click=\"datepicker.confirm()\"\\r\\n          class=\"button mdp-primary-btn\"\\r\\n          aria-label=\"{{datepicker.labels.okLabel}}\">\\r\\n          <span ng-bind=\"datepicker.labels.okLabel\"></span>\\r\\n        </md-button>\\r\\n      </md-dialog-actions>\\r\\n    </div>\\r\\n  </md-dialog-content>\\r\\n</md-dialog>\\r\\n');\r\n$templateCache.put('mdpTimePicker.directive.html','<div\\r\\n  layout\\r\\n  layout-align=\"start start\">\\r\\n  <md-button\\r\\n    class=\"md-icon-button\"\\r\\n    ng-click=\"showPicker($event)\"\\r\\n    ng-disabled=\"{{ disabled }}\">\\r\\n    <md-icon class=\"mdp-nav-icon\" md-svg-icon=\"mdp-access-time\"></md-icon>\\r\\n  </md-button>\\r\\n  <md-input-container\\r\\n    md-no-float=\"!!noFloat\"\\r\\n    md-is-error=\"isError()\">\\r\\n    <input\\r\\n      type=\"{{ ::type }}\"\\r\\n      name=\"{{ inputName }}\"\\r\\n      ng-model=\"model.$viewValue\"\\r\\n      ng-required=\"required()\"\\r\\n      ng-disabled=\"{{ disabled }}\"\\r\\n      aria-label=\"{{ placeholder }}\"\\r\\n      placeholder=\"{{ placeholder }}\"\\r\\n      ng-click=\"showPicker($event)\"/>\\r\\n  </md-input-container>\\r\\n</div>\\r\\n');\r\n$templateCache.put('mdpTimePickerDialog.component.html','<md-dialog\\r\\n  aria-label=\"\"\\r\\n  class=\"mdp-timepicker\"\\r\\n  ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">\\r\\n  <md-dialog-content\\r\\n    layout-gt-xs=\"row\"\\r\\n    layout-wrap>\\r\\n    <md-toolbar\\r\\n      layout-gt-xs=\"column\"\\r\\n      layout-xs=\"row\"\\r\\n      layout-align=\"center center\"\\r\\n      flex\\r\\n      class=\"mdp-timepicker-time md-blue md-primary\">\\r\\n      <div class=\"mdp-timepicker-selected-time\">\\r\\n        <span\\r\\n          ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\"\\r\\n          ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\"\\r\\n          ng-bind=\"timepicker.time.format(timepicker.hoursFormat)\"></span>:\\r\\n        <span\\r\\n          ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\"\\r\\n          ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\"\\r\\n          ng-bind=\"timepicker.time.format(timepicker.minutesFormat)\"></span>\\r\\n      </div>\\r\\n      <div\\r\\n        layout=\"column\"\\r\\n        ng-show=\"timepicker.ampm\"\\r\\n        class=\"mdp-timepicker-selected-ampm\">\\r\\n        <span\\r\\n          ng-click=\"timepicker.setAM()\"\\r\\n          ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>\\r\\n        <span\\r\\n          ng-click=\"timepicker.setPM()\"\\r\\n          ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>\\r\\n      </div>\\r\\n    </md-toolbar>\\r\\n    <md-content>\\r\\n      <div\\r\\n        class=\"mdp-clock-switch-container\"\\r\\n        ng-switch=\"timepicker.currentView\"\\r\\n        layout\\r\\n        layout-align=\"center center\">\\r\\n        <mdp-clock\\r\\n          class=\"mdp-animation-zoom\"\\r\\n          ampm=\"timepicker.ampm\"\\r\\n          auto-switch=\"timepicker.autoSwitch\"\\r\\n          time=\"timepicker.time\"\\r\\n          type=\"hours\"\\r\\n          ng-switch-when=\"1\"></mdp-clock>\\r\\n        <mdp-clock\\r\\n        class=\"mdp-animation-zoom\"\\r\\n        ampm=\"timepicker.ampm\"\\r\\n        auto-switch=\"timepicker.autoSwitch\"\\r\\n        time=\"timepicker.time\"\\r\\n        type=\"minutes\"\\r\\n        ng-switch-when=\"2\"></mdp-clock>\\r\\n      </div>\\r\\n      <md-dialog-actions layout=\"row\" class=\"mdp-btn-group\">\\r\\n        <span flex></span>\\r\\n        <md-button\\r\\n          ng-click=\"timepicker.cancel()\"\\r\\n          class=\"button\"\\r\\n          aria-label=\"{{timepicker.labels.cancelLabel}}\">\\r\\n          <span ng-bind=\"timepicker.labels.cancelLabel\"></span>\\r\\n        </md-button>\\r\\n        <md-button\\r\\n          ng-click=\"timepicker.confirm()\"\\r\\n          class=\"button mdp-primary-btn\"\\r\\n          aria-label=\"{{timepicker.labels.okLabel}}\">\\r\\n          <span ng-bind=\"timepicker.labels.okLabel\"></span>\\r\\n        </md-button>\\r\\n      </md-dialog-actions>\\r\\n    </md-content>\\r\\n  </md-dialog-content>\\r\\n</md-dialog>\\r\\n');}]);\r\n\n/* global moment, angular */\r\n\r\nvar module = angular.module(\"mdPickers\", [\r\n  \"mdpTemplates\",\r\n  \"ngMaterial\",\r\n  \"ngAnimate\",\r\n  \"ngAria\"\r\n]);\r\n\r\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\r\n  angular.forEach(mdpIconsRegistry, function(icon, index) {\r\n    $mdIconProvider.icon(icon.id, icon.url);\r\n  });\r\n}]);\r\n\r\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\r\n  angular.forEach(mdpIconsRegistry, function(icon, index) {\r\n    $templateCache.put(icon.url, icon.svg);\r\n  });\r\n}]);\r\n\n/* global moment, angular */\r\n\r\nfunction compareValidator(value, format, otherDate, comparator) {\r\n  // take only the date part, not the time part\r\n  if (angular.isDate(otherDate)) {\r\n    otherDate = moment(otherDate).format(format);\r\n  }\r\n  otherDate = moment(otherDate, format, true);\r\n  var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\r\n\r\n  return !value ||\r\n    angular.isDate(value) ||\r\n    !otherDate.isValid() ||\r\n    comparator(date, otherDate);\r\n}\r\n\n/* global moment, angular */\r\n\r\nfunction filterValidator(value, format, filter) {\r\n  var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\r\n\r\n  return !value ||\r\n    angular.isDate(value) ||\r\n    !angular.isFunction(filter) ||\r\n    !filter(date.toDate());\r\n}\r\n\n/* global moment, angular */\r\n\r\nfunction formatValidator(value, format) {\r\n  return !value || angular.isDate(value) || moment(value, format, true).isValid();\r\n}\r\n\n/* global moment, angular */\r\n\r\nfunction maxDateValidator(value, format, maxDate) {\r\n  var currentMaxDate = moment(maxDate, \"YYYY-MM-DD\", true);\r\n  var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\r\n\r\n  return !value ||\r\n    angular.isDate(value) ||\r\n    !currentMaxDate.isValid() ||\r\n    date.isSameOrBefore(currentMaxDate);\r\n}\r\n\n/* global moment, angular */\r\n\r\nfunction maxTimeValidator(value, format, maxTime) {\r\n  return compareValidator(value, format, maxTime, function(t, mt) {\r\n    return t.isSameOrBefore(mt);\r\n  });\r\n}\r\n\n/* global moment, angular */\r\n\r\nfunction minDateValidator(value, format, minDate) {\r\n  var currentMinDate = moment(minDate, \"YYYY-MM-DD\", true);\r\n  var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\r\n\r\n  return !value ||\r\n    angular.isDate(value) ||\r\n    !currentMinDate.isValid() ||\r\n    date.isSameOrAfter(currentMinDate);\r\n}\r\n\n/* global moment, angular */\r\n\r\nfunction minTimeValidator(value, format, minTime) {\r\n  return compareValidator(value, format, minTime, function(t, mt) {\r\n    return t.isSameOrAfter(mt);\r\n  });\r\n}\r\n\n/* global moment, angular */\r\n\r\nfunction requiredValidator(value, ngModel) {\r\n  return value;\r\n}\r\n\nvar mdpDatePickerProvider = function() {\r\n  var LABEL_OK, LABEL_CANCEL, DISPLAY_FORMAT, PARENT_GETTER;\r\n\r\n  LABEL_OK = \"OK\";\r\n  LABEL_CANCEL = \"Cancel\";\r\n  DISPLAY_FORMAT = \"ddd, MMM DD\";\r\n  PARENT_GETTER = function() {\r\n    return undefined;\r\n  };\r\n\r\n  this.setDisplayFormat = function(format) {\r\n    DISPLAY_FORMAT = format;\r\n  };\r\n\r\n  this.setOKButtonLabel = function(label) {\r\n    LABEL_OK = label;\r\n  };\r\n\r\n  this.setCancelButtonLabel = function(label) {\r\n    LABEL_CANCEL = label;\r\n  };\r\n\r\n  this.setDialogParentGetter = function(fn) {\r\n    PARENT_GETTER = fn;\r\n  };\r\n\r\n  this.$get = [\"$mdDialog\", \"$mdpLocale\", function($mdDialog, $mdpLocale) {\r\n    var datePicker = function(currentDate, options) {\r\n      if (!moment(currentDate).isValid()) {\r\n        currentDate = moment().valueOf();\r\n      }\r\n      if (!angular.isObject(options)) {\r\n        options = {};\r\n      }\r\n\r\n      options.displayFormat = options.displayFormat || $mdpLocale.date.displayFormat || DISPLAY_FORMAT;\r\n      options.labels = {\r\n        okLabel: options.okLabel || $mdpLocale.date.okLabel || LABEL_OK,\r\n        cancelLabel: options.cancelLabel || $mdpLocale.date.cancelLabel || LABEL_CANCEL\r\n      };\r\n\r\n      return $mdDialog.show({\r\n        controller: \"DatePickerDialogCtrl\",\r\n        controllerAs: \"datepicker\",\r\n        clickOutsideToClose: true,\r\n        templateUrl: \"mdpDatePickerDialog.component.html\",\r\n        targetEvent: options.targetEvent,\r\n        locals: {\r\n          currentDate: currentDate,\r\n          options: options\r\n        },\r\n        multiple: true,\r\n        parent: PARENT_GETTER()\r\n      });\r\n    };\r\n\r\n    return datePicker;\r\n  }];\r\n};\r\n\r\nmodule.provider(\"$mdpDatePicker\", mdpDatePickerProvider);\r\n\nvar mdpTimePickerProvider = function() {\r\n  var LABEL_OK, LABEL_CANCEL, PARENT_GETTER;\r\n\r\n  LABEL_OK = \"OK\";\r\n  LABEL_CANCEL = \"Cancel\";\r\n  PARENT_GETTER = function() {\r\n    return undefined;\r\n  };\r\n\r\n  this.setOKButtonLabel = function(label) {\r\n    LABEL_OK = label;\r\n  };\r\n\r\n  this.setCancelButtonLabel = function(label) {\r\n    LABEL_CANCEL = label;\r\n  };\r\n\r\n  this.setDialogParentGetter = function(fn) {\r\n    PARENT_GETTER = fn;\r\n  };\r\n\r\n  this.$get = [\"$mdDialog\", \"$mdpLocale\", function($mdDialog, $mdpLocale) {\r\n    var timePicker = function(time, options) {\r\n      if (!moment(time).isValid()) {\r\n        time = moment().valueOf();\r\n      }\r\n      if (!angular.isObject(options)) {\r\n        options = {};\r\n      }\r\n\r\n      options.labels = {\r\n        okLabel: options.okLabel || $mdpLocale.time.okLabel || LABEL_OK,\r\n        cancelLabel: options.cancelLabel || $mdpLocale.time.cancelLabel || LABEL_CANCEL\r\n      };\r\n\r\n      return $mdDialog.show({\r\n        controller: \"TimePickerDialogCtrl\",\r\n        controllerAs: \"timepicker\",\r\n        clickOutsideToClose: true,\r\n        templateUrl: \"mdpTimePickerDialog.component.html\",\r\n        targetEvent: options.targetEvent,\r\n        locals: {\r\n          time: time,\r\n          autoSwitch: options.autoSwitch,\r\n          ampm: angular.isDefined(options.ampm) ? options.ampm : $mdpLocale.time.ampm,\r\n          useUtc: options.useUtc,\r\n          options: options\r\n        },\r\n        multiple: true,\r\n        parent: PARENT_GETTER()\r\n      });\r\n    };\r\n\r\n    return timePicker;\r\n  }];\r\n};\r\n\r\nmodule.provider(\"$mdpTimePicker\", mdpTimePickerProvider);\r\n\nmodule.constant(\"mdpIconsRegistry\", [\r\n    {\r\n        id: 'mdp-chevron-left',\r\n        url: 'mdp-chevron-left.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-chevron-right',\r\n        url: 'mdp-chevron-right.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-access-time',\r\n        url: 'mdp-access-time.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-event',\r\n        url: 'mdp-event.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    }\r\n]);\n/**\r\n * Created by Robin Thoni on 6/21/17.\r\n */\r\n\r\nmodule.factory('$mdpLocale', [function () {\r\n    var $mdpLocale = {\r\n        time: {\r\n            minTime: null,\r\n            maxTime: null,\r\n            okLabel: \"OK\",\r\n            cancelLabel: \"Cancel\",\r\n            timeFormat: \"HH:mm\",\r\n            noFloat: false,\r\n            openOnClick: false,\r\n            autoSwitch: false,\r\n            ampm: true,\r\n            clearOnCancel: false\r\n        },\r\n        date: {\r\n            minDate: null,\r\n            maxDate: null,\r\n            okLabel: \"OK\",\r\n            cancelLabel: \"Cancel\",\r\n            dateFilter: null,\r\n            dateFormat: \"YYYY-MM-DD\",\r\n            displayFormat: \"ddd, MMM DD\",\r\n            noFloat: false,\r\n            openOnClick: false,\r\n            clearOnCancel: false\r\n        }\r\n    };\r\n\r\n    return $mdpLocale;\r\n}]);\r\n\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\r\n   return {\r\n        restrict: \"EA\",\r\n        priority: 101,\r\n        compile: function(element) {\r\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\r\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\r\n\r\n            // If we are not a child of an input container, don't do anything\r\n            if (!inputContainer) return;\r\n\r\n            // Add our animation class\r\n            element.toggleClass('md-input-message-animation', true);\r\n\r\n            return {};\r\n        }\r\n    };\r\n}]);\r\n\n/* global moment, angular */\r\n\r\nvar mdpDatePickerDirective = function($mdpDatePicker, $timeout, $mdpLocale) {\r\n  return {\r\n    restrict: 'E',\r\n    require: ['ngModel', \"^^?form\"],\r\n    transclude: true,\r\n    templateUrl: 'mdpDatePicker.directive.html',\r\n    scope: {\r\n      \"minDate\": \"=mdpMinDate\",\r\n      \"maxDate\": \"=mdpMaxDate\",\r\n      \"okLabel\": \"@?mdpOkLabel\",\r\n      \"cancelLabel\": \"@?mdpCancelLabel\",\r\n      \"useUtc\": \"=?mdpUseUtc\",\r\n      \"placeholder\": \"@mdpPlaceholder\",\r\n      \"openOnClick\": \"=mdpOpenOnClick\",\r\n      \"disabled\": \"=?mdpDisabled\",\r\n      \"noFloat\": \"=mdpNoFloat\",\r\n      \"dateFilter\": \"=mdpDateFilter\",\r\n      \"dateFormat\": \"@mdpFormat\",\r\n      \"inputName\": \"@?mdpInputName\",\r\n      \"clearOnCancel\": \"=?mdpClearOnCancel\"\r\n    },\r\n    link: {\r\n      post: function(scope, element, attrs, controllers, $transclude) {\r\n        var ngModel, form, opts, inputElement, inputContainer, inputContainerCtrl, messages;\r\n\r\n        ngModel = controllers[0];\r\n        form = controllers[1];\r\n\r\n        opts = {\r\n          get minDate() {\r\n            return scope.minDate || $mdpLocale.date.minDate;\r\n          },\r\n          get maxDate() {\r\n            return scope.maxDate || $mdpLocale.date.maxDate;\r\n          },\r\n          get dateFilter() {\r\n            return scope.dateFilter || $mdpLocale.date.dateFilter;\r\n          },\r\n          get clearOnCancel() {\r\n            return angular.isDefined(scope.clearOnCancel) ? scope.clearOnCancel : $mdpLocale.date.clearOnCancel;\r\n          }\r\n        };\r\n\r\n        inputElement = angular.element(element[0].querySelector('input'));\r\n        inputContainer = angular.element(element[0].querySelector('md-input-container'));\r\n        inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\r\n\r\n        $transclude(function(clone) {\r\n          inputContainer.append(clone);\r\n        });\r\n\r\n        messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\r\n\r\n        // TODO: fix input type\r\n        scope.type = scope.dateFormat ? \"text\" : \"date\";\r\n        scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\r\n        scope.useUtc = scope.useUtc || false;\r\n\r\n        scope.model = ngModel;\r\n\r\n        scope.isError = function() {\r\n          return !!ngModel.$invalid && (!ngModel.$pristine || (form != null && form.$submitted));\r\n        };\r\n\r\n        scope.required = function() {\r\n          return !!attrs.required;\r\n        };\r\n\r\n        // update input element if model has changed\r\n        ngModel.$formatters.unshift(function(value) {\r\n          var date = angular.isDate(value) && (scope.useUtc ? moment.utc(value) : moment(value));\r\n          if (date && (angular.isDate(date) || date.isValid())) {\r\n            var strVal = date.format(scope.dateFormat);\r\n            updateInputElement(strVal);\r\n            return strVal;\r\n          } else {\r\n            updateInputElement(null);\r\n            return null;\r\n          }\r\n        });\r\n\r\n        ngModel.$validators.format = function(modelValue, viewValue) {\r\n          return formatValidator(viewValue, scope.dateFormat);\r\n        };\r\n\r\n        ngModel.$validators.minDate = function(modelValue, viewValue) {\r\n          return minDateValidator(viewValue, scope.dateFormat, opts.minDate);\r\n        };\r\n\r\n        ngModel.$validators.maxDate = function(modelValue, viewValue) {\r\n          return maxDateValidator(viewValue, scope.dateFormat, opts.maxDate);\r\n        };\r\n\r\n        ngModel.$validators.filter = function(modelValue, viewValue) {\r\n          return filterValidator(viewValue, scope.dateFormat, opts.dateFilter);\r\n        };\r\n\r\n        ngModel.$validators.required = function(modelValue, viewValue) {\r\n          return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\r\n        };\r\n\r\n        ngModel.$parsers.unshift(function(value) {\r\n          var parsed = scope.useUtc ? moment.utc(value, scope.dateFormat, true) : moment(value, scope.dateFormat, true);\r\n          if (parsed.isValid()) {\r\n            if (angular.isDate(ngModel.$modelValue)) {\r\n              var originalModel = scope.useUtc ? moment.utc(ngModel.$modelValue) : moment(ngModel.$modelValue);\r\n              originalModel.year(parsed.year());\r\n              originalModel.month(parsed.month());\r\n              originalModel.date(parsed.date());\r\n\r\n              parsed = originalModel;\r\n            }\r\n            return parsed.toDate();\r\n          } else\r\n            return null;\r\n        });\r\n\r\n        // update input element value\r\n        function updateInputElement(value) {\r\n          inputElement[0].value = value;\r\n          inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\r\n        }\r\n\r\n        function updateDate(date) {\r\n          var value, strValue;\r\n\r\n          value = scope.useUtc ?\r\n            moment.utc(date, angular.isDate(date) ? null : scope.dateFormat, true) :\r\n            moment(date, angular.isDate(date) ? null : scope.dateFormat, true);\r\n\r\n          strValue = value.format(scope.dateFormat);\r\n\r\n          if (value.isValid()) {\r\n            updateInputElement(strValue);\r\n            ngModel.$setViewValue(strValue);\r\n          } else {\r\n            updateInputElement(date);\r\n            ngModel.$setViewValue(date);\r\n          }\r\n\r\n          if (!ngModel.$pristine &&\r\n            messages.hasClass(\"md-auto-hide\") &&\r\n            inputContainer.hasClass(\"md-input-invalid\")) {\r\n            messages.removeClass(\"md-auto-hide\");\r\n          }\r\n\r\n          ngModel.$render();\r\n        }\r\n\r\n        scope.showPicker = function(ev) {\r\n          if (angular.isDefined(scope.openOnClick) || !!scope.openOnClick) {\r\n            return;\r\n          }\r\n          $mdpDatePicker(ngModel.$modelValue, {\r\n            minDate: opts.minDate,\r\n            maxDate: opts.maxDate,\r\n            dateFilter: opts.dateFilter,\r\n            useUtc: scope.useUtc,\r\n            okLabel: scope.okLabel,\r\n            cancelLabel: scope.cancelLabel,\r\n            targetEvent: ev\r\n          }).then(function(time) {\r\n            updateDate(time, true);\r\n          }, function(error) {\r\n            if (opts.clearOnCancel) {\r\n              updateDate(null, true);\r\n            }\r\n          });\r\n        };\r\n\r\n        function onInputElementEvents(event) {\r\n          if (event.target.value !== ngModel.$viewVaue)\r\n            updateDate(event.target.value);\r\n        }\r\n\r\n        inputElement.on(\"reset input blur\", onInputElementEvents);\r\n\r\n        scope.$on(\"$destroy\", function() {\r\n          inputElement.off(\"reset input blur\", onInputElementEvents);\r\n        });\r\n\r\n        // revalidate on constraint change\r\n        scope.$watch(\"minDate + maxDate\", function() {\r\n          ngModel.$validate();\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nmdpDatePickerDirective.$inject = [\r\n  \"$mdpDatePicker\",\r\n  \"$timeout\",\r\n  \"$mdpLocale\"\r\n];\r\n\r\nmodule.directive(\"mdpDatePicker\", mdpDatePickerDirective);\r\n\n/* global moment, angular */\r\n\r\nvar DatePickerDialogCtrl = function($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\r\n  var self = this;\r\n\r\n  this.selectingYear = false;\r\n  this.useUtc = !!options.useUtc;\r\n  this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\r\n  this.labels = options.labels;\r\n  this.minDate = options.minDate && moment(options.minDate).isValid() ? (this.useUtc ? moment.utc(options.minDate) : moment(options.minDate)) : null;\r\n  this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? (this.useUtc ? moment.utc(options.maxDate) : moment(options.maxDate)) : null;\r\n  this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\r\n  this.date = this.useUtc ? moment.utc(currentDate) : moment(currentDate);\r\n\r\n  // validate min and max date\r\n  if (this.minDate && this.maxDate) {\r\n    if (this.maxDate.isBefore(this.minDate)) {\r\n      this.maxDate = moment(this.minDate).add(1, 'days');\r\n    }\r\n  }\r\n\r\n  if (this.date) {\r\n    // check min date\r\n    if (this.minDate && this.date.isBefore(this.minDate)) {\r\n      this.date = moment(this.minDate);\r\n    }\r\n\r\n    // check max date\r\n    if (this.maxDate && this.date.isAfter(this.maxDate)) {\r\n      this.date = moment(this.maxDate);\r\n    }\r\n  }\r\n\r\n  this.yearItems = {\r\n    currentIndex_: 0,\r\n    PAGE_SIZE: 5,\r\n    START: (self.minDate ? self.minDate.year() : 1900),\r\n    END: (self.maxDate ? self.maxDate.year() : 0),\r\n    getItemAtIndex: function(index) {\r\n      if (this.currentIndex_ < index) {\r\n        this.currentIndex_ = index;\r\n      }\r\n      return this.START + index;\r\n    },\r\n    getLength: function() {\r\n      return Math.min(\r\n        this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\r\n        Math.abs(this.START - this.END) + 1\r\n      );\r\n    }\r\n  };\r\n\r\n  $scope.$mdMedia = $mdMedia;\r\n  $scope.year = this.date.year();\r\n\r\n  this.selectYear = function(year) {\r\n    self.date.year(year);\r\n    $scope.year = year;\r\n    self.selectingYear = false;\r\n    self.animate();\r\n  };\r\n\r\n  this.showYear = function() {\r\n    self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\r\n    self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\r\n    self.selectingYear = true;\r\n  };\r\n\r\n  this.showCalendar = function() {\r\n    self.selectingYear = false;\r\n  };\r\n\r\n  this.cancel = function() {\r\n    $mdDialog.cancel();\r\n  };\r\n\r\n  this.confirm = function() {\r\n    var date = this.date;\r\n\r\n    if (this.minDate && this.date.isBefore(this.minDate)) {\r\n      date = moment(this.minDate);\r\n    }\r\n\r\n    if (this.maxDate && this.date.isAfter(this.maxDate)) {\r\n      date = moment(this.maxDate);\r\n    }\r\n\r\n    $mdDialog.hide(date.toDate());\r\n  };\r\n\r\n  this.animate = function() {\r\n    self.animating = true;\r\n    $timeout(angular.noop).then(function() {\r\n      self.animating = false;\r\n    });\r\n  };\r\n};\r\n\r\nDatePickerDialogCtrl.$inject = [\r\n  \"$scope\",\r\n  \"$mdDialog\",\r\n  \"$mdMedia\",\r\n  \"$timeout\",\r\n  \"currentDate\",\r\n  \"options\"\r\n];\r\n\r\nmodule.controller(\"DatePickerDialogCtrl\", DatePickerDialogCtrl);\r\n\n/* global moment, angular */\r\n\r\nvar ClockCtrl = function($scope) {\r\n  var self, TYPE_HOURS, TYPE_MINUTES;\r\n\r\n  self = this;\r\n  TYPE_HOURS = \"hours\";\r\n  TYPE_MINUTES = \"minutes\";\r\n\r\n  this.$onInit = function() {\r\n    var i;\r\n    self.STEP_DEG = 360 / 12;\r\n    self.steps = [];\r\n    this.CLOCK_TYPES = {\r\n      \"hours\": {\r\n        range: self.ampm ? 12 : 24,\r\n      },\r\n      \"minutes\": {\r\n        range: 60,\r\n      }\r\n    };\r\n    self.type = self.type || \"hours\";\r\n\r\n    switch (self.type) {\r\n      case TYPE_HOURS:\r\n        var f = self.ampm ? 1 : 2;\r\n        var t = self.ampm ? 12 : 23;\r\n        for (i = f; i <= t; i += f) {\r\n          self.steps.push(i);\r\n        }\r\n        if (!self.ampm) {\r\n          self.steps.push(0);\r\n        }\r\n        self.selected = self.time.hours() || 0;\r\n        if (self.ampm && self.selected > 12) {\r\n          self.selected -= 12;\r\n        }\r\n        break;\r\n\r\n      case TYPE_MINUTES:\r\n        for (i = 5; i <= 55; i += 5) {\r\n          self.steps.push(i);\r\n        }\r\n        self.steps.push(0);\r\n        self.selected = self.time.minutes() || 0;\r\n        break;\r\n\r\n    }\r\n  };\r\n\r\n  this.getPointerStyle = function() {\r\n    var divider = 1;\r\n    switch (self.type) {\r\n      case TYPE_HOURS:\r\n        divider = self.ampm ? 12 : 24;\r\n        break;\r\n      case TYPE_MINUTES:\r\n        divider = 60;\r\n        break;\r\n    }\r\n\r\n    var degrees = Math.round(self.selected * (360 / divider)) - 180;\r\n    return {\r\n      \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\r\n      \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\r\n      \"transform\": \"rotate(\" + degrees + \"deg)\"\r\n    };\r\n  };\r\n\r\n  this.setTimeByDeg = function(deg) {\r\n    deg = deg >= 360 ? 0 : deg;\r\n    var divider = 0;\r\n    switch (self.type) {\r\n      case TYPE_HOURS:\r\n        divider = self.ampm ? 12 : 24;\r\n        break;\r\n      case TYPE_MINUTES:\r\n        divider = 60;\r\n        break;\r\n    }\r\n\r\n    self.setTime(\r\n      Math.round(divider / 360 * deg)\r\n    );\r\n  };\r\n\r\n  this.setTime = function(time, type) {\r\n    this.selected = time;\r\n\r\n    switch (self.type) {\r\n      case TYPE_HOURS:\r\n        if (self.ampm && self.time.format(\"A\") == \"PM\") time += 12;\r\n        this.time.hours(time);\r\n        break;\r\n      case TYPE_MINUTES:\r\n        if (time > 59) time -= 60;\r\n        this.time.minutes(time);\r\n        break;\r\n    }\r\n  };\r\n};\r\n\r\nClockCtrl.$inject = [\r\n  \"$scope\"\r\n];\r\n\r\nmodule.controller(\"ClockCtrl\", ClockCtrl);\r\n\n/* global moment, angular */\r\n\r\nvar mdpClockDirective = function($animate, $timeout) {\r\n  return {\r\n    restrict: \"E\",\r\n    bindToController: {\r\n      \"type\": \"@?\",\r\n      \"time\": \"=\",\r\n      \"autoSwitch\": \"=?\",\r\n      \"ampm\": \"=?\"\r\n    },\r\n    replace: true,\r\n    templateUrl: \"mdpClock.directive.html\",\r\n    controller: \"ClockCtrl\",\r\n    controllerAs: \"clock\",\r\n    link: function(scope, element, attrs, ctrl) {\r\n      var pointer, timepickerCtrl, onEvent, containerCoords, x, y, deg;\r\n\r\n      pointer = angular.element(element[0].querySelector(\".mdp-pointer\"));\r\n\r\n      timepickerCtrl = scope.$parent.timepicker;\r\n      scope.raised = false;\r\n\r\n      onEvent = function(event) {\r\n        containerCoords = event.currentTarget.getClientRects()[0];\r\n        x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left));\r\n        y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\r\n        deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\r\n\r\n        $timeout(function() {\r\n          ctrl.setTimeByDeg(deg + 180);\r\n          if (ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) {\r\n            timepickerCtrl.switchView();\r\n          }\r\n        });\r\n      };\r\n\r\n      element.on(\"mousedown\", function() {\r\n        element.on(\"mousemove\", onEvent);\r\n      });\r\n\r\n      element.on(\"mouseup\", function(e) {\r\n        element.off(\"mousemove\");\r\n      });\r\n\r\n      element.on(\"click\", onEvent);\r\n      scope.$on(\"$destroy\", function() {\r\n        element.off(\"click\", onEvent);\r\n        element.off(\"mousemove\", onEvent);\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nmdpClockDirective.$inject = [\r\n  \"$animate\",\r\n  \"$timeout\"\r\n];\r\n\r\nmodule.directive(\"mdpClock\", mdpClockDirective);\r\n\n/* global moment, angular */\r\n\r\nvar TimePickerDialogCtrl = function($scope, $mdDialog, time, useUtc, autoSwitch, ampm, $mdMedia, options) {\r\n  var self = this;\r\n  this.VIEW_HOURS = 1;\r\n  this.VIEW_MINUTES = 2;\r\n  this.labels = options.labels;\r\n  this.currentView = this.VIEW_HOURS;\r\n  this.autoSwitch = !!autoSwitch;\r\n  this.ampm = !!ampm;\r\n  this.useUtc = !!useUtc;\r\n  this.hoursFormat = self.ampm ? \"h\" : \"H\";\r\n  this.minutesFormat = \"mm\";\r\n  this.time = this.useUtc ? moment.utc(time) : moment(time);\r\n  this.clockHours = parseInt(this.time.format(this.hoursFormat));\r\n  this.clockMinutes = parseInt(this.time.format(this.minutesFormat));\r\n\r\n  $scope.$mdMedia = $mdMedia;\r\n\r\n  this.switchView = function() {\r\n    self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\r\n  };\r\n\r\n  this.setAM = function() {\r\n    if (self.time.hours() >= 12) {\r\n      self.time.hour(self.time.hour() - 12);\r\n    }\r\n  };\r\n\r\n  this.setPM = function() {\r\n    if (self.time.hours() < 12)\r\n      self.time.hour(self.time.hour() + 12);\r\n  };\r\n\r\n  this.cancel = function() {\r\n    $mdDialog.cancel();\r\n  };\r\n\r\n  this.confirm = function() {\r\n    $mdDialog.hide(this.time.toDate());\r\n  };\r\n};\r\n\r\nTimePickerDialogCtrl.$inject = [\r\n  \"$scope\",\r\n  \"$mdDialog\",\r\n  \"time\",\r\n  \"useUtc\",\r\n  \"autoSwitch\",\r\n  \"ampm\",\r\n  \"$mdMedia\",\r\n  \"options\"\r\n];\r\n\r\nmodule.controller(\"TimePickerDialogCtrl\", TimePickerDialogCtrl);\r\n\n/* global moment, angular */\r\n\r\nvar mdpTimePickerDirective = function($mdpTimePicker, $timeout, $mdpLocale) {\r\n  return {\r\n    restrict: 'E',\r\n    require: ['ngModel', \"^^?form\"],\r\n    transclude: true,\r\n    templateUrl: 'mdpTimePicker.directive.html',\r\n    scope: {\r\n      \"minTime\": \"=?mdpMinTime\",\r\n      \"maxTime\": \"=?mdpMaxTime\",\r\n      \"timeFormat\": \"@mdpFormat\",\r\n      \"okLabel\": \"@?mdpOkLabel\",\r\n      \"cancelLabel\": \"@?mdpCancelLabel\",\r\n      \"useUtc\": \"=?mdpUseUtc\",\r\n      \"placeholder\": \"@mdpPlaceholder\",\r\n      \"autoSwitch\": \"=?mdpAutoSwitch\",\r\n      \"openOnClick\": \"=mdpOpenOnClick\",\r\n      \"disabled\": \"=?mdpDisabled\",\r\n      \"noFloat\": \"=mdpNoFloat\",\r\n      \"ampm\": \"=?mdpAmpm\",\r\n      \"inputName\": \"@?mdpInputName\",\r\n      \"clearOnCancel\": \"=?mdpClearOnCancel\"\r\n    },\r\n    link: function(scope, element, attrs, controllers, $transclude) {\r\n      var ngModel = controllers[0];\r\n      var form = controllers[1];\r\n\r\n      var opts = {\r\n        get minTime() {\r\n          return scope.minTime || $mdpLocale.time.minTime;\r\n        },\r\n        get maxTime() {\r\n          return scope.maxTime || $mdpLocale.time.maxTime;\r\n        },\r\n        get clearOnCancel() {\r\n          return angular.isDefined(scope.clearOnCancel) ? scope.clearOnCancel : $mdpLocale.time.clearOnCancel;\r\n        }\r\n      };\r\n\r\n      var inputElement = angular.element(element[0].querySelector('input')),\r\n        inputContainer = angular.element(element[0].querySelector('md-input-container')),\r\n        inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\r\n\r\n      $transclude(function(clone) {\r\n        inputContainer.append(clone);\r\n      });\r\n\r\n      var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\r\n\r\n      // TODO: fix input type\r\n      scope.type = scope.timeFormat || $mdpLocale.time.timeFormat ? \"text\" : \"time\";\r\n      scope.timeFormat = scope.timeFormat || $mdpLocale.time.timeFormat || \"HH:mm\";\r\n      scope.autoSwitch = scope.autoSwitch === undefined ? $mdpLocale.time.autoSwitch : scope.autoSwitch;\r\n      scope.useUtc = scope.useUtc || false;\r\n      scope.model = ngModel;\r\n\r\n      scope.isError = function() {\r\n        return !!ngModel.$invalid && (!ngModel.$pristine || (form != null && form.$submitted));\r\n      };\r\n\r\n      scope.required = function() {\r\n        return !!attrs.required;\r\n      };\r\n\r\n      scope.$watch(function() {\r\n        return ngModel.$error;\r\n      }, function(newValue, oldValue) {\r\n        inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\r\n      }, true);\r\n\r\n      // update input element if model has changed\r\n      ngModel.$formatters.unshift(function(value) {\r\n        var time = angular.isDate(value) && (scope.useUtc ? moment.utc(value) : moment(value));\r\n        if (time && (angular.isDate(time) || time.isValid())) {\r\n          var strVal = time.format(scope.timeFormat);\r\n          updateInputElement(strVal);\r\n          return strVal;\r\n        } else {\r\n          updateInputElement(null);\r\n          return null;\r\n        }\r\n      });\r\n\r\n      ngModel.$validators.format = function(modelValue, viewValue) {\r\n        return !viewValue || angular.isDate(viewValue) || (scope.useUtc ? moment.utc(viewValue, scope.timeFormat, true) : moment(viewValue, scope.timeFormat, true)).isValid();\r\n      };\r\n\r\n      ngModel.$validators.required = function(modelValue, viewValue) {\r\n        return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\r\n      };\r\n\r\n      ngModel.$validators.minTime = function(modelValue, viewValue) {\r\n        return minTimeValidator(viewValue, scope.timeFormat, opts.minTime);\r\n      };\r\n\r\n      ngModel.$validators.maxTime = function(modelValue, viewValue) {\r\n        return maxTimeValidator(viewValue, scope.timeFormat, opts.maxTime);\r\n      };\r\n\r\n\r\n      ngModel.$parsers.unshift(function(value) {\r\n        var parsed = scope.useUtc ? moment.utc(value, scope.timeFormat, true) : moment(value, scope.timeFormat, true);\r\n        if (parsed.isValid()) {\r\n          if (angular.isDate(ngModel.$modelValue)) {\r\n            var originalModel = scope.useUtc ? moment.utc(ngModel.$modelValue) : moment(ngModel.$modelValue);\r\n            originalModel.minutes(parsed.minutes());\r\n            originalModel.hours(parsed.hours());\r\n            originalModel.seconds(parsed.seconds());\r\n\r\n            parsed = originalModel;\r\n          }\r\n          return parsed.toDate();\r\n        } else\r\n          return null;\r\n      });\r\n\r\n      // update input element value\r\n      function updateInputElement(value) {\r\n        inputElement[0].value = value;\r\n        inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\r\n      }\r\n\r\n      function updateTime(time) {\r\n        var value = scope.useUtc ? moment.utc(time, angular.isDate(time) ? null : scope.timeFormat, true) : moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\r\n          strValue = value.format(scope.timeFormat);\r\n\r\n        if (value.isValid()) {\r\n          updateInputElement(strValue);\r\n          ngModel.$setViewValue(strValue);\r\n        } else {\r\n          updateInputElement(time);\r\n          ngModel.$setViewValue(time);\r\n        }\r\n\r\n        if (!ngModel.$pristine &&\r\n          messages.hasClass(\"md-auto-hide\") &&\r\n          inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\r\n\r\n        ngModel.$render();\r\n      }\r\n\r\n      scope.showPicker = function(ev) {\r\n        if (angular.isDefined(scope.openOnClick) || !!scope.openOnClick) {\r\n          return;\r\n        }\r\n        $mdpTimePicker(ngModel.$modelValue, {\r\n          targetEvent: ev,\r\n          okLabel: scope.okLabel,\r\n          cancelLabel: scope.cancelLabel,\r\n          autoSwitch: scope.autoSwitch,\r\n          ampm: scope.ampm,\r\n          useUtc: scope.useUtc\r\n        }).then(function(time) {\r\n          updateTime(time, true);\r\n        }, function(error) {\r\n          if (opts.clearOnCancel) {\r\n            updateTime(null, true);\r\n          }\r\n        });\r\n      };\r\n\r\n      function onInputElementEvents(event) {\r\n        if (event.target.value !== ngModel.$viewVaue)\r\n          updateTime(event.target.value);\r\n      }\r\n\r\n      inputElement.on(\"reset input blur\", onInputElementEvents);\r\n\r\n      scope.$on(\"$destroy\", function() {\r\n        inputElement.off(\"reset input blur\", onInputElementEvents);\r\n      });\r\n\r\n      // revalidate on constraint change\r\n      scope.$watch(\"minTime + maxTime\", function() {\r\n        ngModel.$validate();\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nmdpTimePickerDirective.$inject = [\r\n  \"$mdpTimePicker\",\r\n  \"$timeout\",\r\n  \"$mdpLocale\"\r\n];\r\n\r\nmodule.directive(\"mdpTimePicker\", mdpTimePickerDirective);\r\n\n/* global moment, angular */\r\n\r\nvar CalendarCtrl = function($scope) {\r\n  var self;\r\n\r\n  self = this;\r\n\r\n  this.getDaysInMonth = function() {\r\n    var days = self.date.daysInMonth(),\r\n      firstDay = moment(self.date).date(1).day() - this.dow;\r\n\r\n    if (firstDay < 0) firstDay = this.weekDays.length - 1;\r\n\r\n    var arr = [];\r\n    for (var i = 1; i <= (firstDay + days); i++) {\r\n      var day = null;\r\n      if (i > firstDay) {\r\n        day = {\r\n          value: (i - firstDay),\r\n          enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\r\n        };\r\n      }\r\n      arr.push(day);\r\n    }\r\n\r\n    return arr;\r\n  };\r\n\r\n  this.isDayEnabled = function(day) {\r\n    return (!this.minDate || this.minDate <= day) &&\r\n      (!this.maxDate || this.maxDate >= day) &&\r\n      (!self.dateFilter || !self.dateFilter(day));\r\n  };\r\n\r\n  this.selectDate = function(dom) {\r\n    self.date.date(dom);\r\n  };\r\n\r\n  this.nextMonth = function() {\r\n    self.date.add(1, 'months');\r\n  };\r\n\r\n  this.prevMonth = function() {\r\n    self.date.subtract(1, 'months');\r\n  };\r\n\r\n  this.updateDaysInMonth = function() {\r\n    self.daysInMonth = self.getDaysInMonth();\r\n  };\r\n\r\n  this.$onInit = function() {\r\n    self.daysInMonth = [];\r\n    self.dow = moment.localeData().firstDayOfWeek();\r\n    self.weekDays = [].concat(\r\n      moment.weekdaysMin().slice(self.dow),\r\n      moment.weekdaysMin().slice(0, self.dow)\r\n    );\r\n    $scope.$watch(function() {\r\n      return self.date.unix();\r\n    }, function(newValue, oldValue) {\r\n      if (newValue && newValue !== oldValue)\r\n        self.updateDaysInMonth();\r\n    });\r\n    self.updateDaysInMonth();\r\n  };\r\n};\r\n\r\nCalendarCtrl.$inject = [\r\n  \"$scope\"\r\n];\r\n\r\nmodule.controller(\"CalendarCtrl\", CalendarCtrl);\r\n\n/* global moment, angular */\r\n\r\nvar mdpCalendarDirective = function($animate) {\r\n  return {\r\n    restrict: \"E\",\r\n    bindToController: {\r\n      \"date\": \"=\",\r\n      \"minDate\": \"=\",\r\n      \"maxDate\": \"=\",\r\n      \"dateFilter\": \"=\"\r\n    },\r\n    templateUrl: \"mdpcalendar.directive.html\",\r\n    controller: \"CalendarCtrl\",\r\n    controllerAs: \"calendar\",\r\n    link: function(scope, element, attrs, ctrl) {\r\n      var animElements = [\r\n        element[0].querySelector(\".mdp-calendar-week-days\"),\r\n        element[0].querySelector(\".mdp-calendar-days\"),\r\n        element[0].querySelector(\".mdp-calendar-monthyear\")\r\n      ].map(function(a) {\r\n        return angular.element(a);\r\n      });\r\n\r\n      scope.$watch(function() {\r\n        return ctrl.date.format(\"YYYYMM\");\r\n      }, function(newValue, oldValue) {\r\n        var direction = null;\r\n\r\n        if (newValue > oldValue)\r\n          direction = \"mdp-animate-next\";\r\n        else if (newValue < oldValue)\r\n          direction = \"mdp-animate-prev\";\r\n\r\n        if (direction) {\r\n          for (var i in animElements) {\r\n            animElements[i].addClass(direction);\r\n            $animate.removeClass(animElements[i], direction);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nmdpCalendarDirective.$inject = [\r\n  \"$animate\"\r\n];\r\n\r\nmodule.directive(\"mdpCalendar\", mdpCalendarDirective);\r\n\n})();"]}
{"version":3,"sources":["mdPickers.min.js"],"names":["compareValidator","value","format","otherDate","comparator","angular","isDate","moment","date","isValid","filterValidator","filter","isFunction","toDate","formatValidator","maxDateValidator","maxDate","currentMaxDate","isSameOrBefore","maxTimeValidator","maxTime","t","mt","minDateValidator","minDate","currentMinDate","isSameOrAfter","minTimeValidator","minTime","module","run","$templateCache","put","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","index","id","url","svg","mdpDatePickerProvider","LABEL_OK","LABEL_CANCEL","DISPLAY_FORMAT","PARENT_GETTER","this","setDisplayFormat","setOKButtonLabel","label","setCancelButtonLabel","setDialogParentGetter","fn","$get","$mdDialog","$mdpLocale","datePicker","currentDate","options","Date","now","isObject","displayFormat","labels","okLabel","cancelLabel","show","controller","controllerAs","clickOutsideToClose","templateUrl","targetEvent","locals","multiple","parent","provider","mdpTimePickerProvider","timePicker","time","autoSwitch","ampm","isDefined","useUtc","constant","factory","timeFormat","noFloat","openOnClick","clearOnCancel","dateFilter","dateFormat","directive","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","CalendarCtrl","$scope","self","getDaysInMonth","days","daysInMonth","firstDay","day","dow","weekDays","length","arr","i","enabled","isDayEnabled","push","selectDate","dom","nextMonth","add","prevMonth","subtract","updateDaysInMonth","$onInit","localeData","firstDayOfWeek","concat","weekdaysMin","slice","$watch","unix","newValue","oldValue","$inject","mdpCalendarDirective","$animate","bindToController","link","scope","attrs","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","hours","range","minutes","type","f","selected","getPointerStyle","divider","degrees","Math","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","mdpClockDirective","$timeout","replace","pointer","timepickerCtrl","onEvent","containerCoords","x","y","$parent","timepicker","raised","event","currentTarget","getClientRects","offsetWidth","pageX","left","pageY","top","offsetHeight","atan2","PI","indexOf","switchView","on","e","off","$on","mdpDatePickerDirective","$mdpDatePicker","require","transclude","placeholder","mdpNoFloat","mdpPlaceholder","mdpOpenOnClick","disabled","inputName","post","controllers","$transclude","updateInputElement","inputElement","inputContainerCtrl","setHasValue","ngModel","$isEmpty","updateDate","strValue","utc","$setViewValue","$pristine","messages","hasClass","$render","onInputElementEvents","target","$viewVaue","form","opts","clone","append","model","isError","$invalid","$submitted","required","$formatters","unshift","strVal","$validators","modelValue","viewValue","isUndefined","$parsers","parsed","$modelValue","originalModel","year","month","showPicker","ev","then","error","$validate","DatePickerDialogCtrl","$mdMedia","selectingYear","isBefore","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","END","getItemAtIndex","getLength","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","animating","noop","mdpTimePickerDirective","$mdpTimePicker","updateTime","undefined","$error","setInvalid","Object","keys","seconds","TimePickerDialogCtrl","VIEW_HOURS","VIEW_MINUTES","currentView","hoursFormat","minutesFormat","clockHours","parseInt","clockMinutes","setAM","hour","setPM"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\nangular.module('mdpTemplates', []).run(['$templateCache', function($templateCache) {$templateCache.put('mdpClock.directive.html','<md-card class=\"mdp-clock\">\\n  <div class=\"mdp-clock-container\">\\n    <md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>\\n    <md-toolbar\\n      ng-style=\"clock.getPointerStyle()\"\\n      class=\"mdp-pointer md-primary\">\\n      <span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>\\n    </md-toolbar>\\n    <md-button\\n      ng-class=\"{\\n        \\'md-primary\\': clock.selected == step,\\n        \\'md-raised\\': raised || clock.selected == step\\n      }\"\\n      ng-mouseenter=\"raised = true\"\\n      ng-mouseleave=\"raised = false\"\\n      class=\"md-icon-button mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\"\\n      aria-label=\"{{step}}\"\\n      ng-repeat=\"step in clock.steps\"\\n      ng-click=\"clock.setTime(step)\"\\n      ng-bind=\"step\"></md-button>\\n  </div>\\n</md-card>\\n');\n$templateCache.put('mdpcalendar.directive.html','<div class=\"mdp-calendar\">\\n  <div\\n    layout=\"row\"\\n    layout-align=\"space-between center\">\\n    <md-button\\n      aria-label=\"previous month\"\\n      class=\"md-icon-button\"\\n      ng-click=\"calendar.prevMonth()\">\\n      <md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon>\\n    </md-button>\\n    <div\\n      class=\"mdp-calendar-monthyear\"\\n      ng-show=\"!calendar.animating\"\\n      ng-bind=\"calendar.date.format(\\'MMMM YYYY\\')\">\\n    </div>\\n    <md-button\\n      aria-label=\"next month\"\\n      class=\"md-icon-button\"\\n      ng-click=\"calendar.nextMonth()\">\\n      <md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon>\\n    </md-button>\\n  </div>\\n  <div\\n    layout=\"row\"\\n    layout-align=\"space-around center\"\\n    class=\"mdp-calendar-week-days\"\\n    ng-show=\"!calendar.animating\">\\n    <div\\n      layout\\n      layout-align=\"center center\"\\n      ng-repeat=\"d in calendar.weekDays track by $index\"\\n      ng-bind=\"d\">\\n    </div>\\n  </div>\\n  <div\\n    layout=\"row\"\\n    layout-align=\"start center\"\\n    layout-wrap\\n    class=\"mdp-calendar-days\"\\n    ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\"\\n    ng-show=\"!calendar.animating\"\\n    md-swipe-left=\"calendar.nextMonth()\"\\n    md-swipe-right=\"calendar.prevMonth()\">\\n    <div\\n      layout\\n      layout-align=\"center center\"\\n      ng-repeat-start=\"day in calendar.daysInMonth track by $index\"\\n      ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">\\n      <md-button\\n        class=\"md-icon-button\"\\n        aria-label=\"Select day\"\\n        ng-mouseenter=\"raised = true\"\\n        ng-mouseleave=\"raised = false\"\\n        ng-if=\"day\"\\n        ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value, \\'md-raised\\': raised || calendar.date.date() == day.value }\"\\n        ng-click=\"calendar.selectDate(day.value)\"\\n        ng-disabled=\"!day.enabled\"\\n        ng-bind=\"day.value\">\\n      </md-button>\\n    </div>\\n    <div\\n      flex=\"100\"\\n      ng-if=\"($index + 1) % 7 == 0\"\\n      ng-repeat-end></div>\\n  </div>\\n</div>\\n');\n$templateCache.put('mdpDatePicker.directive.html','<div layout layout-align=\"start start\">\\n  <md-button\\n    {{angular.isDefined(attrs.mdpDisabled) ? ng-disabled=\"disabled\" : \\'\\'}}\\n    class=\"md-icon-button\"\\n    ng-click=\"showPicker($event)\">\\n    <md-icon md-svg-icon=\"mdp-event\"></md-icon>\\n  </md-button>\\n  <md-input-container\\n    {{(noFloat ? \\' md-no-float \\' : \\' \\'}}\\n    md-is-error=\"isError()\">\\n    <input\\n      name=\"{{ inputName }}\"\\n      ng-model=\"model.$viewValue\"\\n      ng-required=\"required()\"\\n      type=\"{{ ::type }}\"\\n      {{(angular.isDefined(attrs.mdpDisabled) ? ng-disabled=\"disabled\" : \\'\\')}}\\n      aria-label=\"{{placeholder}}\"\\n      placeholder=\"{{placeholder}}\"\\n      {{(openOnClick ? \\' ng-click=\"showPicker($event)\" \\' : \\' \\')}} />\\n  </md-input-container>\\n</div>\\n');\n$templateCache.put('mdpTimePicker.directive.html','<div\\n  layout\\n  layout-align=\"start start\">\\n  <md-button\\n    class=\"md-icon-button\"\\n    ng-click=\"showPicker($event)\"\\n    {{angular.isDefined(attrs.mdpDisabled) ? \\'ng-disabled=\"disabled\"\\' : \\'\\'}}>\\n    <md-icon md-svg-icon=\"mdp-access-time\"></md-icon>\\n  </md-button>\\n  <md-input-container\\n    {{(noFloat ? \\'md-no-float\\' : \\'\\')}}\\n    md-is-error=\"isError()\">\\n    <input\\n      name=\"{{ inputName }}\"\\n      ng-model=\"model.$viewValue\"\\n      ng-required=\"required()\"\\n      type=\"{{ ::type }}\"\\n      {{angular.isDefined(attrs.mdpDisabled) ? \\'ng-disabled=\"disabled\"\\' : \\'\\'}}\\n      aria-label=\"{{placeholder}}\"\\n      placeholder=\"{{placeholder}}\"\\n      {{openOnClick ? \\'ng-click=\"showPicker($event)\"\\' : \\'\\'}}/>\\n  </md-input-container>\\n</div>\\n');\n$templateCache.put('mdpDatePickerDialog.component.html','<md-dialog\\n  aria-label=\"\"\\n  class=\"mdp-datepicker\"\\n  ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">\\n  <md-dialog-content\\n    layout=\"row\"\\n    layout-wrap>\\n    <div\\n      layout=\"column\"\\n      layout-align=\"start center\">\\n      <md-toolbar\\n        layout-align=\"start start\"\\n        flex\\n        class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\"\\n        layout=\"column\">\\n        <span\\n          class=\"mdp-datepicker-year\"\\n          ng-click=\"datepicker.showYear()\"\\n          ng-class=\"{ \\'active\\': datepicker.selectingYear }\"\\n          ng-bind=\"datepicker.date.format(\\'YYYY\\')\">\\n        </span>\\n        <span\\n          class=\"mdp-datepicker-date\"\\n          ng-click=\"datepicker.showCalendar()\"\\n          ng-class=\"{ \\'active\\': !datepicker.selectingYear }\"\\n          ng-bind=\"datepicker.date.format(datepicker.displayFormat)\"></span>\\n      </md-toolbar>\\n    </div>\\n    <div>\\n      <div\\n        class=\"mdp-datepicker-select-year mdp-animation-zoom\"\\n        layout=\"column\"\\n        layout-align=\"center start\"\\n        ng-if=\"datepicker.selectingYear\">\\n        <md-virtual-repeat-container\\n          md-auto-shrink\\n          md-top-index=\"datepicker.yearTopIndex\">\\n          <div\\n            flex\\n            md-virtual-repeat=\"item in datepicker.yearItems\"\\n            md-on-demand\\n            class=\"repeated-year\">\\n            <span\\n              class=\"md-button\"\\n              ng-click=\"datepicker.selectYear(item)\"\\n              md-ink-ripple\\n              ng-class=\"{ \\'md-primary current\\': item == year }\"\\n              ng-bind=\"item\"></span>\\n          </div>\\n        </md-virtual-repeat-container>\\n      </div>\\n      <mdp-calendar\\n        ng-if=\"!datepicker.selectingYear\"\\n        class=\"mdp-animation-zoom\"\\n        date=\"datepicker.date\"\\n        min-date=\"datepicker.minDate\"\\n        date-filter=\"datepicker.dateFilter\"\\n        max-date=\"datepicker.maxDate\"></mdp-calendar>\\n      <md-dialog-actions layout=\"row\">\\n        <span flex></span>\\n        <md-button\\n          ng-click=\"datepicker.cancel()\"\\n          aria-label=\"{{datepicker.labels.cancelLabel}}\"\\n          ng-bind=\"datepicker.labels.cancelLabel\"></md-button>\\n        <md-button\\n          ng-click=\"datepicker.confirm()\"\\n          class=\"md-primary\"\\n          aria-label=\"{{datepicker.labels.okLabel}}\"\\n          ng-bind=\"datepicker.labels.okLabel\"></md-button>\\n      </md-dialog-actions>\\n    </div>\\n  </md-dialog-content>\\n</md-dialog>\\n');\n$templateCache.put('mdpTimePickerDialog.component.html','<md-dialog\\n  aria-label=\"\"\\n  class=\"mdp-timepicker\"\\n  ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">\\n  <md-dialog-content\\n    layout-gt-xs=\"row\"\\n    layout-wrap>\\n    <md-toolbar\\n      layout-gt-xs=\"column\"\\n      layout-xs=\"row\"\\n      layout-align=\"center center\"\\n      flex\\n      class=\"mdp-timepicker-time md-hue-1 md-primary\">\\n      <div class=\"mdp-timepicker-selected-time\">\\n        <span\\n          ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\"\\n          ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\"\\n          ng-bind=\"timepicker.time.format(timepicker.hoursFormat)\"></span>:\\n        <span\\n          ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\"\\n          ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\"\\n          ng-bind=\"timepicker.time.format(timepicker.minutesFormat)\"></span>\\n      </div>\\n      <div\\n        layout=\"column\"\\n        ng-show=\"timepicker.ampm\"\\n        class=\"mdp-timepicker-selected-ampm\">\\n        <span\\n          ng-click=\"timepicker.setAM()\"\\n          ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>\\n        <span\\n          ng-click=\"timepicker.setPM()\"\\n          ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>\\n      </div>\\n    </md-toolbar>\\n    <md-content>\\n      <div\\n        class=\"mdp-clock-switch-container\"\\n        ng-switch=\"timepicker.currentView\"\\n        layout\\n        layout-align=\"center center\">\\n        <mdp-clock\\n          class=\"mdp-animation-zoom\"\\n          ampm=\"timepicker.ampm\"\\n          auto-switch=\"timepicker.autoSwitch\"\\n          time=\"timepicker.time\"\\n          type=\"hours\"\\n          ng-switch-when=\"1\"></mdp-clock>\\n        <mdp-clock\\n        class=\"mdp-animation-zoom\"\\n        ampm=\"timepicker.ampm\"\\n        auto-switch=\"timepicker.autoSwitch\"\\n        time=\"timepicker.time\"\\n        type=\"minutes\"\\n        ng-switch-when=\"2\"></mdp-clock>\\n      </div>\\n      <md-dialog-actions layout=\"row\">\\n        <span flex></span>\\n        <md-button\\n          ng-click=\"timepicker.cancel()\"\\n          aria-label=\"{{timepicker.labels.cancelLabel}}\"\\n          ng-bind=\"timepicker.labels.cancelLabel\"></md-button>\\n        <md-button\\n          ng-click=\"timepicker.confirm()\"\\n          class=\"md-primary\"\\n          aria-label=\"{{timepicker.labels.okLabel}}\"\\n          ng-bind=\"timepicker.labels.okLabel\"></md-button>\\n      </md-dialog-actions>\\n    </md-content>\\n  </md-dialog-content>\\n</md-dialog>\\n');}]);\n/* global moment, angular */\n\nvar module = angular.module(\"mdPickers\", [\n  \"templates\",\n  \"ngMaterial\",\n  \"ngAnimate\",\n  \"ngAria\"\n]);\n\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\n  angular.forEach(mdpIconsRegistry, function(icon, index) {\n    $mdIconProvider.icon(icon.id, icon.url);\n  });\n}]);\n\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\n  angular.forEach(mdpIconsRegistry, function(icon, index) {\n    $templateCache.put(icon.url, icon.svg);\n  });\n}]);\n\n/* global moment, angular */\n\nfunction compareValidator(value, format, otherDate, comparator) {\n  // take only the date part, not the time part\n  if (angular.isDate(otherDate)) {\n    otherDate = moment(otherDate).format(format);\n  }\n  otherDate = moment(otherDate, format, true);\n  var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\n\n  return !value ||\n    angular.isDate(value) ||\n    !otherDate.isValid() ||\n    comparator(date, otherDate);\n}\n\n/* global moment, angular */\n\nfunction filterValidator(value, format, filter) {\n  var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\n\n  return !value ||\n    angular.isDate(value) ||\n    !angular.isFunction(filter) ||\n    !filter(date.toDate());\n}\n\n/* global moment, angular */\n\nfunction formatValidator(value, format) {\n  return !value || angular.isDate(value) || moment(value, format, true).isValid();\n}\n\n/* global moment, angular */\n\nfunction maxDateValidator(value, format, maxDate) {\n  var currentMaxDate = moment(maxDate, \"YYYY-MM-DD\", true);\n  var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\n\n  return !value ||\n    angular.isDate(value) ||\n    !currentMaxDate.isValid() ||\n    date.isSameOrBefore(currentMaxDate);\n}\n\n/* global moment, angular */\n\nfunction maxTimeValidator(value, format, maxTime) {\n  return compareValidator(value, format, maxTime, function(t, mt) {\n    return t.isSameOrBefore(mt);\n  });\n}\n\n/* global moment, angular */\n\nfunction minDateValidator(value, format, minDate) {\n  var currentMinDate = moment(minDate, \"YYYY-MM-DD\", true);\n  var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\n\n  return !value ||\n    angular.isDate(value) ||\n    !currentMinDate.isValid() ||\n    date.isSameOrAfter(currentMinDate);\n}\n\n/* global moment, angular */\n\nfunction minTimeValidator(value, format, minTime) {\n  return compareValidator(value, format, minTime, function(t, mt) {\n    return t.isSameOrAfter(mt);\n  });\n}\n\n/* global moment, angular */\n\nfunction requiredValidator(value, ngModel) {\n  return value;\n}\n\nvar mdpDatePickerProvider = function() {\n  var LABEL_OK, LABEL_CANCEL, DISPLAY_FORMAT, PARENT_GETTER;\n\n  LABEL_OK = \"OK\";\n  LABEL_CANCEL = \"Cancel\";\n  DISPLAY_FORMAT = \"ddd, MMM DD\";\n  PARENT_GETTER = function() {\n    return undefined;\n  };\n\n  this.setDisplayFormat = function(format) {\n    DISPLAY_FORMAT = format;\n  };\n\n  this.setOKButtonLabel = function(label) {\n    LABEL_OK = label;\n  };\n\n  this.setCancelButtonLabel = function(label) {\n    LABEL_CANCEL = label;\n  };\n\n  this.setDialogParentGetter = function(fn) {\n    PARENT_GETTER = fn;\n  };\n\n  this.$get = [\"$mdDialog\", \"$mdpLocale\", function($mdDialog, $mdpLocale) {\n    var datePicker = function(currentDate, options) {\n      if (!angular.isDate(currentDate)) currentDate = Date.now();\n      if (!angular.isObject(options)) options = {};\n\n      options.displayFormat = options.displayFormat || $mdpLocale.date.displayFormat || DISPLAY_FORMAT;\n      options.labels = {\n        okLabel: options.okLabel || $mdpLocale.date.okLabel || LABEL_OK,\n        cancelLabel: options.cancelLabel || $mdpLocale.date.cancelLabel || LABEL_CANCEL\n      };\n\n      return $mdDialog.show({\n        controller: \"DatePickerDialogCtrl\",\n        controllerAs: \"datepicker\",\n        clickOutsideToClose: true,\n        templateUrl: \"mdpDatePickerDialog.component.html\",\n        targetEvent: options.targetEvent,\n        locals: {\n          currentDate: currentDate,\n          options: options\n        },\n        multiple: true,\n        parent: PARENT_GETTER()\n      });\n    };\n\n    return datePicker;\n  }];\n};\n\nmodule.provider(\"$mdpDatePicker\", mdpDatePickerProvider);\n\nvar mdpTimePickerProvider = function() {\n  var LABEL_OK, LABEL_CANCEL, PARENT_GETTER;\n\n  LABEL_OK = \"OK\";\n  LABEL_CANCEL = \"Cancel\";\n  PARENT_GETTER = function() {\n    return undefined;\n  };\n\n  this.setOKButtonLabel = function(label) {\n    LABEL_OK = label;\n  };\n\n  this.setCancelButtonLabel = function(label) {\n    LABEL_CANCEL = label;\n  };\n\n  this.setDialogParentGetter = function(fn) {\n    PARENT_GETTER = fn;\n  };\n\n  this.$get = [\"$mdDialog\", \"$mdpLocale\", function($mdDialog, $mdpLocale) {\n    var timePicker = function(time, options) {\n      if (!angular.isDate(time)) time = Date.now();\n      if (!angular.isObject(options)) options = {};\n\n      options.labels = {\n        okLabel: options.okLabel || $mdpLocale.time.okLabel || LABEL_OK,\n        cancelLabel: options.cancelLabel || $mdpLocale.time.cancelLabel || LABEL_CANCEL\n      };\n\n      return $mdDialog.show({\n        controller: \"TimePickerDialogCtrl\",\n        controllerAs: \"timepicker\",\n        clickOutsideToClose: true,\n        templateUrl: \"mdpTimePickerDialog.component.html\",\n        targetEvent: options.targetEvent,\n        locals: {\n          time: time,\n          autoSwitch: options.autoSwitch,\n          ampm: angular.isDefined(options.ampm) ? options.ampm : $mdpLocale.time.ampm,\n          useUtc: options.useUtc,\n          options: options\n        },\n        multiple: true,\n        parent: PARENT_GETTER()\n      });\n    };\n\n    return timePicker;\n  }];\n};\n\nmodule.provider(\"$mdpTimePicker\", mdpTimePickerProvider);\n\nmodule.constant(\"mdpIconsRegistry\", [\n    {\n        id: 'mdp-chevron-left',\n        url: 'mdp-chevron-left.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-chevron-right',\n        url: 'mdp-chevron-right.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-access-time',\n        url: 'mdp-access-time.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\n    },\n    {\n        id: 'mdp-event',\n        url: 'mdp-event.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    }\n]);\n/**\n * Created by Robin Thoni on 6/21/17.\n */\n\nmodule.factory('$mdpLocale', [function () {\n    var $mdpLocale = {\n        time: {\n            minTime: null,\n            maxTime: null,\n            okLabel: \"OK\",\n            cancelLabel: \"Cancel\",\n            timeFormat: \"HH:mm\",\n            noFloat: false,\n            openOnClick: false,\n            autoSwitch: false,\n            ampm: true,\n            clearOnCancel: false\n        },\n        date: {\n            minDate: null,\n            maxDate: null,\n            okLabel: \"OK\",\n            cancelLabel: \"Cancel\",\n            dateFilter: null,\n            dateFormat: \"YYYY-MM-DD\",\n            displayFormat: \"ddd, MMM DD\",\n            noFloat: false,\n            openOnClick: false,\n            clearOnCancel: false\n        }\n    };\n\n    return $mdpLocale;\n}]);\n\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\n   return {\n        restrict: \"EA\",\n        priority: 101,\n        compile: function(element) {\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\n\n            // If we are not a child of an input container, don't do anything\n            if (!inputContainer) return;\n\n            // Add our animation class\n            element.toggleClass('md-input-message-animation', true);\n\n            return {};\n        }\n    };\n}]);\n\n/* global moment, angular */\n\nvar CalendarCtrl = function($scope) {\n  var self;\n\n  self = this;\n\n  this.getDaysInMonth = function() {\n    var days = self.date.daysInMonth(),\n      firstDay = moment(self.date).date(1).day() - this.dow;\n\n    if (firstDay < 0) firstDay = this.weekDays.length - 1;\n\n    var arr = [];\n    for (var i = 1; i <= (firstDay + days); i++) {\n      var day = null;\n      if (i > firstDay) {\n        day = {\n          value: (i - firstDay),\n          enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\n        };\n      }\n      arr.push(day);\n    }\n\n    return arr;\n  };\n\n  this.isDayEnabled = function(day) {\n    return (!this.minDate || this.minDate <= day) &&\n      (!this.maxDate || this.maxDate >= day) &&\n      (!self.dateFilter || !self.dateFilter(day));\n  };\n\n  this.selectDate = function(dom) {\n    self.date.date(dom);\n  };\n\n  this.nextMonth = function() {\n    self.date.add(1, 'months');\n  };\n\n  this.prevMonth = function() {\n    self.date.subtract(1, 'months');\n  };\n\n  this.updateDaysInMonth = function() {\n    self.daysInMonth = self.getDaysInMonth();\n  };\n\n  this.$onInit = function() {\n    self.daysInMonth = [];\n    self.dow = moment.localeData().firstDayOfWeek();\n    self.weekDays = [].concat(\n      moment.weekdaysMin().slice(self.dow),\n      moment.weekdaysMin().slice(0, self.dow)\n    );\n    $scope.$watch(function() {\n      return self.date.unix();\n    }, function(newValue, oldValue) {\n      if (newValue && newValue !== oldValue)\n        self.updateDaysInMonth();\n    });\n    self.updateDaysInMonth();\n  };\n};\n\nCalendarCtrl.$inject = [\n  \"$scope\"\n];\n\nmodule.controller(\"CalendarCtrl\", CalendarCtrl);\n\n/* global moment, angular */\n\nvar mdpCalendarDirective = function($animate) {\n  return {\n    restrict: \"E\",\n    bindToController: {\n      \"date\": \"=\",\n      \"minDate\": \"=\",\n      \"maxDate\": \"=\",\n      \"dateFilter\": \"=\"\n    },\n    templateUrl: \"mdpcalendar.directive.html\",\n    controller: \"CalendarCtrl\",\n    controllerAs: \"calendar\",\n    link: function(scope, element, attrs, ctrl) {\n      var animElements = [\n        element[0].querySelector(\".mdp-calendar-week-days\"),\n        element[0].querySelector(\".mdp-calendar-days\"),\n        element[0].querySelector(\".mdp-calendar-monthyear\")\n      ].map(function(a) {\n        return angular.element(a);\n      });\n\n      scope.$watch(function() {\n        return ctrl.date.format(\"YYYYMM\");\n      }, function(newValue, oldValue) {\n        var direction = null;\n\n        if (newValue > oldValue)\n          direction = \"mdp-animate-next\";\n        else if (newValue < oldValue)\n          direction = \"mdp-animate-prev\";\n\n        if (direction) {\n          for (var i in animElements) {\n            animElements[i].addClass(direction);\n            $animate.removeClass(animElements[i], direction);\n          }\n        }\n      });\n    }\n  };\n};\n\nmdpCalendarDirective.$inject = [\n  \"$animate\"\n];\n\nmodule.directive(\"mdpCalendar\", mdpCalendarDirective);\n\n/* global moment, angular */\n\nvar ClockCtrl = function($scope) {\n  var self, TYPE_HOURS, TYPE_MINUTES;\n\n  self = this;\n  TYPE_HOURS = \"hours\";\n  TYPE_MINUTES = \"minutes\";\n\n  this.$onInit = function() {\n    var i;\n    self.STEP_DEG = 360 / 12;\n    self.steps = [];\n    this.CLOCK_TYPES = {\n      \"hours\": {\n        range: self.ampm ? 12 : 24,\n      },\n      \"minutes\": {\n        range: 60,\n      }\n    };\n    self.type = self.type || \"hours\";\n\n    switch (self.type) {\n      case TYPE_HOURS:\n        var f = self.ampm ? 1 : 2;\n        var t = self.ampm ? 12 : 23;\n        for (i = f; i <= t; i += f) {\n          self.steps.push(i);\n        }\n        if (!self.ampm) {\n          self.steps.push(0);\n        }\n        self.selected = self.time.hours() || 0;\n        if (self.ampm && self.selected > 12) {\n          self.selected -= 12;\n        }\n        break;\n\n      case TYPE_MINUTES:\n        for (i = 5; i <= 55; i += 5) {\n          self.steps.push(i);\n        }\n        self.steps.push(0);\n        self.selected = self.time.minutes() || 0;\n        break;\n\n    }\n  };\n\n  this.getPointerStyle = function() {\n    var divider = 1;\n    switch (self.type) {\n      case TYPE_HOURS:\n        divider = self.ampm ? 12 : 24;\n        break;\n      case TYPE_MINUTES:\n        divider = 60;\n        break;\n    }\n\n    var degrees = Math.round(self.selected * (360 / divider)) - 180;\n    return {\n      \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n      \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n      \"transform\": \"rotate(\" + degrees + \"deg)\"\n    };\n  };\n\n  this.setTimeByDeg = function(deg) {\n    deg = deg >= 360 ? 0 : deg;\n    var divider = 0;\n    switch (self.type) {\n      case TYPE_HOURS:\n        divider = self.ampm ? 12 : 24;\n        break;\n      case TYPE_MINUTES:\n        divider = 60;\n        break;\n    }\n\n    self.setTime(\n      Math.round(divider / 360 * deg)\n    );\n  };\n\n  this.setTime = function(time, type) {\n    this.selected = time;\n\n    switch (self.type) {\n      case TYPE_HOURS:\n        if (self.ampm && self.time.format(\"A\") == \"PM\") time += 12;\n        this.time.hours(time);\n        break;\n      case TYPE_MINUTES:\n        if (time > 59) time -= 60;\n        this.time.minutes(time);\n        break;\n    }\n  };\n};\n\nClockCtrl.$inject = [\n  \"$scope\"\n];\n\nmodule.controller(\"ClockCtrl\", ClockCtrl);\n\n/* global moment, angular */\n\nvar mdpClockDirective = function($animate, $timeout) {\n  return {\n    restrict: \"E\",\n    bindToController: {\n      \"type\": \"@?\",\n      \"time\": \"=\",\n      \"autoSwitch\": \"=?\",\n      \"ampm\": \"=?\"\n    },\n    replace: true,\n    templateUrl: \"mdpClock.directive.html\",\n    controller: \"ClockCtrl\",\n    controllerAs: \"clock\",\n    link: function(scope, element, attrs, ctrl) {\n      var pointer, timepickerCtrl, onEvent, containerCoords, x, y, deg;\n\n      pointer = angular.element(element[0].querySelector(\".mdp-pointer\"));\n\n      timepickerCtrl = scope.$parent.timepicker;\n      scope.raised = false;\n\n      onEvent = function(event) {\n        containerCoords = event.currentTarget.getClientRects()[0];\n        x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left));\n        y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n        deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n\n        $timeout(function() {\n          ctrl.setTimeByDeg(deg + 180);\n          if (ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n        });\n      };\n\n      element.on(\"mousedown\", function() {\n        element.on(\"mousemove\", onEvent);\n      });\n\n      element.on(\"mouseup\", function(e) {\n        element.off(\"mousemove\");\n      });\n\n      element.on(\"click\", onEvent);\n      scope.$on(\"$destroy\", function() {\n        element.off(\"click\", onEvent);\n        element.off(\"mousemove\", onEvent);\n      });\n    }\n  };\n};\n\nmdpClockDirective.$inject = [\n  \"$animate\",\n  \"$timeout\"\n];\n\nmodule.directive(\"mdpClock\", mdpClockDirective);\n\n/* global moment, angular */\n\nvar mdpDatePickerDirective = function($mdpDatePicker, $timeout, $mdpLocale) {\n  return {\n    restrict: 'E',\n    require: ['ngModel', \"^^?form\"],\n    transclude: true,\n    templateUrl: function(element, attrs) {\n      var noFloat, placeholder, openOnClick;\n\n      noFloat = angular.isDefined(attrs.mdpNoFloat);\n      placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\";\n      openOnClick = angular.isDefined(attrs.mdpOpenOnClick) || $mdpLocale.date.openOnClick;\n\n      return 'mdpDatePicker.directive.html';\n    },\n    scope: {\n      \"minDate\": \"=mdpMinDate\",\n      \"maxDate\": \"=mdpMaxDate\",\n      \"okLabel\": \"@?mdpOkLabel\",\n      \"cancelLabel\": \"@?mdpCancelLabel\",\n      \"dateFilter\": \"=mdpDateFilter\",\n      \"dateFormat\": \"@mdpFormat\",\n      \"useUtc\": \"=?mdpUseUtc\",\n      \"placeholder\": \"@mdpPlaceholder\",\n      \"noFloat\": \"=mdpNoFloat\",\n      \"openOnClick\": \"=mdpOpenOnClick\",\n      \"disabled\": \"=?mdpDisabled\",\n      \"inputName\": \"@?mdpInputName\",\n      \"clearOnCancel\": \"=?mdpClearOnCancel\"\n    },\n    link: {\n      post: function(scope, element, attrs, controllers, $transclude) {\n        var ngModel = controllers[0];\n        var form = controllers[1];\n\n        var opts = {\n          get minDate() {\n            return scope.minDate || $mdpLocale.date.minDate;\n          },\n          get maxDate() {\n            return scope.maxDate || $mdpLocale.date.maxDate;\n          },\n          get dateFilter() {\n            return scope.dateFilter || $mdpLocale.date.dateFilter;\n          },\n          get clearOnCancel() {\n            return angular.isDefined(scope.clearOnCancel) ? scope.clearOnCancel : $mdpLocale.date.clearOnCancel;\n          }\n        };\n\n        var inputElement = angular.element(element[0].querySelector('input')),\n          inputContainer = angular.element(element[0].querySelector('md-input-container')),\n          inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n        $transclude(function(clone) {\n          inputContainer.append(clone);\n        });\n\n        var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n        scope.type = scope.dateFormat ? \"text\" : \"date\";\n        scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n        scope.useUtc = scope.useUtc || false;\n\n        scope.model = ngModel;\n\n        scope.isError = function() {\n          return !!ngModel.$invalid && (!ngModel.$pristine || (form != null && form.$submitted));\n        };\n\n        scope.required = function() {\n          return !!attrs.required;\n        };\n\n        // update input element if model has changed\n        ngModel.$formatters.unshift(function(value) {\n          var date = angular.isDate(value) && (scope.useUtc ? moment.utc(value) : moment(value));\n          if (date && date.isValid()) {\n            var strVal = date.format(scope.dateFormat);\n            updateInputElement(strVal);\n            return strVal;\n          } else {\n            updateInputElement(null);\n            return null;\n          }\n        });\n\n        ngModel.$validators.format = function(modelValue, viewValue) {\n          return formatValidator(viewValue, scope.dateFormat);\n        };\n\n        ngModel.$validators.minDate = function(modelValue, viewValue) {\n          return minDateValidator(viewValue, scope.dateFormat, opts.minDate);\n        };\n\n        ngModel.$validators.maxDate = function(modelValue, viewValue) {\n          return maxDateValidator(viewValue, scope.dateFormat, opts.maxDate);\n        };\n\n        ngModel.$validators.filter = function(modelValue, viewValue) {\n          return filterValidator(viewValue, scope.dateFormat, opts.dateFilter);\n        };\n\n        ngModel.$validators.required = function(modelValue, viewValue) {\n          return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n        };\n\n        ngModel.$parsers.unshift(function(value) {\n          var parsed = scope.useUtc ? moment.utc(value, scope.dateFormat, true) : moment(value, scope.dateFormat, true);\n          if (parsed.isValid()) {\n            if (angular.isDate(ngModel.$modelValue)) {\n              var originalModel = scope.useUtc ? moment.utc(ngModel.$modelValue) : moment(ngModel.$modelValue);\n              originalModel.year(parsed.year());\n              originalModel.month(parsed.month());\n              originalModel.date(parsed.date());\n\n              parsed = originalModel;\n            }\n            return parsed.toDate();\n          } else\n            return null;\n        });\n\n        // update input element value\n        function updateInputElement(value) {\n          inputElement[0].value = value;\n          inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n        }\n\n        function updateDate(date) {\n          var value, strValue;\n\n          value = scope.useUtc ?\n            moment.utc(date, angular.isDate(date) ? null : scope.dateFormat, true) :\n            moment(date, angular.isDate(date) ? null : scope.dateFormat, true);\n\n          strValue = value.format(scope.dateFormat);\n\n          if (value.isValid()) {\n            updateInputElement(strValue);\n            ngModel.$setViewValue(strValue);\n          } else {\n            updateInputElement(date);\n            ngModel.$setViewValue(date);\n          }\n\n          if (!ngModel.$pristine &&\n            messages.hasClass(\"md-auto-hide\") &&\n            inputContainer.hasClass(\"md-input-invalid\")) {\n            messages.removeClass(\"md-auto-hide\");\n          }\n\n          ngModel.$render();\n        }\n\n        scope.showPicker = function(ev) {\n          $mdpDatePicker(ngModel.$modelValue, {\n            minDate: opts.minDate,\n            maxDate: opts.maxDate,\n            dateFilter: opts.dateFilter,\n            useUtc: scope.useUtc,\n            okLabel: scope.okLabel,\n            cancelLabel: scope.cancelLabel,\n            targetEvent: ev\n          }).then(function(time) {\n            updateDate(time, true);\n          }, function(error) {\n            if (opts.clearOnCancel) {\n              updateDate(null, true);\n            }\n          });\n        };\n\n        function onInputElementEvents(event) {\n          if (event.target.value !== ngModel.$viewVaue)\n            updateDate(event.target.value);\n        }\n\n        inputElement.on(\"reset input blur\", onInputElementEvents);\n\n        scope.$on(\"$destroy\", function() {\n          inputElement.off(\"reset input blur\", onInputElementEvents);\n        });\n\n        // revalidate on constraint change\n        scope.$watch(\"minDate + maxDate\", function() {\n          ngModel.$validate();\n        });\n      }\n    }\n  };\n};\n\nmdpDatePickerDirective.$inject = [\n  \"$mdpDatePicker\",\n  \"$timeout\",\n  \"$mdpLocale\"\n];\n\nmodule.directive(\"mdpDatePicker\", mdpDatePickerDirective);\n\n/* global moment, angular */\n\nvar DatePickerDialogCtrl = function($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n  var self = this;\n\n  this.selectingYear = false;\n  this.useUtc = !!options.useUtc;\n  this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n  this.labels = options.labels;\n  this.minDate = options.minDate && moment(options.minDate).isValid() ? (this.useUtc ? moment.utc(options.minDate) : moment(options.minDate)) : null;\n  this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? (this.useUtc ? moment.utc(options.maxDate) : moment(options.maxDate)) : null;\n  this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n  this.date = this.useUtc ? moment.utc(currentDate) : moment(currentDate);\n\n  // validate min and max date\n  if (this.minDate && this.maxDate) {\n    if (this.maxDate.isBefore(this.minDate)) {\n      this.maxDate = moment(this.minDate).add(1, 'days');\n    }\n  }\n\n  if (this.date) {\n    // check min date\n    if (this.minDate && this.date.isBefore(this.minDate)) {\n      this.date = moment(this.minDate);\n    }\n\n    // check max date\n    if (this.maxDate && this.date.isAfter(this.maxDate)) {\n      this.date = moment(this.maxDate);\n    }\n  }\n\n  this.yearItems = {\n    currentIndex_: 0,\n    PAGE_SIZE: 5,\n    START: (self.minDate ? self.minDate.year() : 1900),\n    END: (self.maxDate ? self.maxDate.year() : 0),\n    getItemAtIndex: function(index) {\n      if (this.currentIndex_ < index) {\n        this.currentIndex_ = index;\n      }\n      return this.START + index;\n    },\n    getLength: function() {\n      return Math.min(\n        this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n        Math.abs(this.START - this.END) + 1\n      );\n    }\n  };\n\n  $scope.$mdMedia = $mdMedia;\n  $scope.year = this.date.year();\n\n  this.selectYear = function(year) {\n    self.date.year(year);\n    $scope.year = year;\n    self.selectingYear = false;\n    self.animate();\n  };\n\n  this.showYear = function() {\n    self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n    self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n    self.selectingYear = true;\n  };\n\n  this.showCalendar = function() {\n    self.selectingYear = false;\n  };\n\n  this.cancel = function() {\n    $mdDialog.cancel();\n  };\n\n  this.confirm = function() {\n    var date = this.date;\n\n    if (this.minDate && this.date.isBefore(this.minDate)) {\n      date = moment(this.minDate);\n    }\n\n    if (this.maxDate && this.date.isAfter(this.maxDate)) {\n      date = moment(this.maxDate);\n    }\n\n    $mdDialog.hide(date.toDate());\n  };\n\n  this.animate = function() {\n    self.animating = true;\n    $timeout(angular.noop).then(function() {\n      self.animating = false;\n    });\n  };\n};\n\nDatePickerDialogCtrl.$inject = [\n  \"$scope\",\n  \"$mdDialog\",\n  \"$mdMedia\",\n  \"$timeout\",\n  \"currentDate\",\n  \"options\"\n];\n\nmodule.controller(\"DatePickerDialogCtrl\", DatePickerDialogCtrl);\n\n/* global moment, angular */\n\nvar mdpTimePickerDirective = function($mdpTimePicker, $timeout, $mdpLocale) {\n  return {\n    restrict: 'E',\n    require: ['ngModel', \"^^?form\"],\n    transclude: true,\n    templateUrl: function(element, attrs) {\n      var noFloat = angular.isDefined(attrs.mdpNoFloat),\n        placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n        openOnClick = angular.isDefined(attrs.mdpOpenOnClick) || $mdpLocale.time.openOnClick;\n\n      return 'mdpTimePicker.directive.html';\n    },\n    scope: {\n      \"minTime\": \"=?mdpMinTime\",\n      \"maxTime\": \"=?mdpMaxTime\",\n      \"timeFormat\": \"@mdpFormat\",\n      \"okLabel\": \"@?mdpOkLabel\",\n      \"cancelLabel\": \"@?mdpCancelLabel\",\n      \"useUtc\": \"=?mdpUseUtc\",\n      \"placeholder\": \"@mdpPlaceholder\",\n      \"autoSwitch\": \"=?mdpAutoSwitch\",\n      \"disabled\": \"=?mdpDisabled\",\n      \"ampm\": \"=?mdpAmpm\",\n      \"inputName\": \"@?mdpInputName\",\n      \"clearOnCancel\": \"=?mdpClearOnCancel\"\n    },\n    link: function(scope, element, attrs, controllers, $transclude) {\n      var ngModel = controllers[0];\n      var form = controllers[1];\n\n      var opts = {\n        get minTime() {\n          return scope.minTime || $mdpLocale.time.minTime;\n        },\n        get maxTime() {\n          return scope.maxTime || $mdpLocale.time.maxTime;\n        },\n        get clearOnCancel() {\n          return angular.isDefined(scope.clearOnCancel) ? scope.clearOnCancel : $mdpLocale.time.clearOnCancel;\n        }\n      };\n\n      var inputElement = angular.element(element[0].querySelector('input')),\n        inputContainer = angular.element(element[0].querySelector('md-input-container')),\n        inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n      $transclude(function(clone) {\n        inputContainer.append(clone);\n      });\n\n      var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n\n      scope.type = scope.timeFormat || $mdpLocale.time.timeFormat ? \"text\" : \"time\";\n      scope.timeFormat = scope.timeFormat || $mdpLocale.time.timeFormat || \"HH:mm\";\n      scope.autoSwitch = scope.autoSwitch === undefined ? $mdpLocale.time.autoSwitch : scope.autoSwitch;\n      scope.useUtc = scope.useUtc || false;\n      scope.model = ngModel;\n\n      scope.isError = function() {\n        return !!ngModel.$invalid && (!ngModel.$pristine || (form != null && form.$submitted));\n      };\n\n      scope.required = function() {\n        return !!attrs.required;\n      };\n\n      scope.$watch(function() {\n        return ngModel.$error;\n      }, function(newValue, oldValue) {\n        inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n      }, true);\n\n      // update input element if model has changed\n      ngModel.$formatters.unshift(function(value) {\n        var time = angular.isDate(value) && (scope.useUtc ? moment.utc(value) : moment(value));\n        if (time && time.isValid()) {\n          var strVal = time.format(scope.timeFormat);\n          updateInputElement(strVal);\n          return strVal;\n        } else {\n          updateInputElement(null);\n          return null;\n        }\n      });\n\n      ngModel.$validators.format = function(modelValue, viewValue) {\n        return !viewValue || angular.isDate(viewValue) || (scope.useUtc ? moment.utc(viewValue, scope.timeFormat, true) : moment(viewValue, scope.timeFormat, true)).isValid();\n      };\n\n      ngModel.$validators.required = function(modelValue, viewValue) {\n        return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n      };\n\n      ngModel.$validators.minTime = function(modelValue, viewValue) {\n        return minTimeValidator(viewValue, scope.timeFormat, opts.minTime);\n      };\n\n      ngModel.$validators.maxTime = function(modelValue, viewValue) {\n        return maxTimeValidator(viewValue, scope.timeFormat, opts.maxTime);\n      };\n\n\n      ngModel.$parsers.unshift(function(value) {\n        var parsed = scope.useUtc ? moment.utc(value, scope.timeFormat, true) : moment(value, scope.timeFormat, true);\n        if (parsed.isValid()) {\n          if (angular.isDate(ngModel.$modelValue)) {\n            var originalModel = scope.useUtc ? moment.utc(ngModel.$modelValue) : moment(ngModel.$modelValue);\n            originalModel.minutes(parsed.minutes());\n            originalModel.hours(parsed.hours());\n            originalModel.seconds(parsed.seconds());\n\n            parsed = originalModel;\n          }\n          return parsed.toDate();\n        } else\n          return null;\n      });\n\n      // update input element value\n      function updateInputElement(value) {\n        inputElement[0].value = value;\n        inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n      }\n\n      function updateTime(time) {\n        var value = scope.useUtc ? moment.utc(time, angular.isDate(time) ? null : scope.timeFormat, true) : moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\n          strValue = value.format(scope.timeFormat);\n\n        if (value.isValid()) {\n          updateInputElement(strValue);\n          ngModel.$setViewValue(strValue);\n        } else {\n          updateInputElement(time);\n          ngModel.$setViewValue(time);\n        }\n\n        if (!ngModel.$pristine &&\n          messages.hasClass(\"md-auto-hide\") &&\n          inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n        ngModel.$render();\n      }\n\n      scope.showPicker = function(ev) {\n        $mdpTimePicker(ngModel.$modelValue, {\n          targetEvent: ev,\n          okLabel: scope.okLabel,\n          cancelLabel: scope.cancelLabel,\n          autoSwitch: scope.autoSwitch,\n          ampm: scope.ampm,\n          useUtc: scope.useUtc\n        }).then(function(time) {\n          updateTime(time, true);\n        }, function(error) {\n          if (opts.clearOnCancel) {\n            updateTime(null, true);\n          }\n        });\n      };\n\n      function onInputElementEvents(event) {\n        if (event.target.value !== ngModel.$viewVaue)\n          updateTime(event.target.value);\n      }\n\n      inputElement.on(\"reset input blur\", onInputElementEvents);\n\n      scope.$on(\"$destroy\", function() {\n        inputElement.off(\"reset input blur\", onInputElementEvents);\n      });\n\n      // revalidate on constraint change\n      scope.$watch(\"minTime + maxTime\", function() {\n        ngModel.$validate();\n      });\n    }\n  };\n};\n\nmdpTimePickerDirective.$inject = [\n  \"$mdpTimePicker\",\n  \"$timeout\",\n  \"$mdpLocale\"\n];\n\nmodule.directive(\"mdpTimePicker\", mdpTimePickerDirective);\n\n/* global moment, angular */\n\nvar TimePickerDialogCtrl = function($scope, $mdDialog, time, useUtc, autoSwitch, ampm, $mdMedia, options) {\n  var self = this;\n  this.VIEW_HOURS = 1;\n  this.VIEW_MINUTES = 2;\n  this.labels = options.labels;\n  this.currentView = this.VIEW_HOURS;\n  this.autoSwitch = !!autoSwitch;\n  this.ampm = !!ampm;\n  this.useUtc = !!useUtc;\n  this.hoursFormat = self.ampm ? \"h\" : \"H\";\n  this.minutesFormat = \"mm\";\n  this.time = this.useUtc ? moment.utc(time) : moment(time);\n  this.clockHours = parseInt(this.time.format(this.hoursFormat));\n  this.clockMinutes = parseInt(this.time.format(this.minutesFormat));\n\n  $scope.$mdMedia = $mdMedia;\n\n  this.switchView = function() {\n    self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n  };\n\n  this.setAM = function() {\n    if (self.time.hours() >= 12) {\n      self.time.hour(self.time.hour() - 12);\n    }\n  };\n\n  this.setPM = function() {\n    if (self.time.hours() < 12)\n      self.time.hour(self.time.hour() + 12);\n  };\n\n  this.cancel = function() {\n    $mdDialog.cancel();\n  };\n\n  this.confirm = function() {\n    $mdDialog.hide(this.time.toDate());\n  };\n};\n\nTimePickerDialogCtrl.$inject = [\n  \"$scope\",\n  \"$mdDialog\",\n  \"time\",\n  \"useUtc\",\n  \"autoSwitch\",\n  \"ampm\",\n  \"$mdMedia\",\n  \"options\"\n];\n\nmodule.controller(\"TimePickerDialogCtrl\", TimePickerDialogCtrl);\n\n})();"]}
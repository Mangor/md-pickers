{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","$mdMedia","$timeout","currentDate","options","self","this","selectingYear","useUtc","displayFormat","minDate","moment","isValid","utc","maxDate","dateFilter","angular","isFunction","date","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","toDate","animating","noop","then","CalendarCtrl","getDaysInMonth","days","daysInMonth","firstDay","day","dow","weekDays","length","arr","i","value","enabled","isDayEnabled","push","selectDate","dom","nextMonth","prevMonth","subtract","updateDaysInMonth","$onInit","localeData","firstDayOfWeek","concat","weekdaysMin","slice","$watch","unix","newValue","oldValue","formatValidator","format","isDate","minDateValidator","currentMinDate","isSameOrAfter","maxDateValidator","currentMaxDate","isSameOrBefore","filterValidator","filter","TimePickerCtrl","time","autoSwitch","ampm","VIEW_HOURS","VIEW_MINUTES","currentView","hoursFormat","minutesFormat","clockHours","parseInt","clockMinutes","switchView","setAM","hours","hour","setPM","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","minutes","type","f","t","selected","getPointerStyle","divider","degrees","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","compareTimeValidator","otherTime","comparator","minTimeValidator","minTime","mt","maxTimeValidator","maxTime","module","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","factory","$mdpLocale","okLabel","cancelLabel","timeFormat","noFloat","openOnClick","clearOnCancel","dateFormat","directive","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","provider","LABEL_OK","LABEL_CANCEL","DISPLAY_FORMAT","PARENT_GETTER","setDisplayFormat","setOKButtonLabel","label","setCancelButtonLabel","setDialogParentGetter","fn","$get","datePicker","Date","now","isObject","labelOk","labelCancel","show","controller","controllerAs","clickOutsideToClose","template","targetEvent","locals","multiple","parent","$animate","bindToController","link","scope","attrs","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","$mdpDatePicker","require","transclude","isDefined","mdpNoFloat","mdpPlaceholder","mdpOpenOnClick","mdpDisabled","placeholder","disabled","inputName","pre","constollers","$transclude","post","controllers","updateInputElement","inputElement","inputContainerCtrl","setHasValue","ngModel","$isEmpty","updateDate","strValue","$setViewValue","$pristine","messages","hasClass","$render","onInputElementEvents","event","target","$viewVaue","form","opts","clone","append","model","isError","$invalid","$submitted","required","$formatters","unshift","strVal","$validators","modelValue","viewValue","isUndefined","$parsers","parsed","$modelValue","originalModel","month","showPicker","ev","error","on","$on","off","$validate","replace","join","timepickerCtrl","$parent","timepicker","raised","onEvent","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","e","timePicker","$mdpTimePicker","updateTime","undefined","$error","setInvalid","Object","keys","seconds"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\n\nvar module = angular.module(\"mdPickers\", [\n    \"ngMaterial\",\n    \"ngAnimate\",\n    \"ngAria\"\n]);\n\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\n        $mdIconProvider.icon(icon.id, icon.url);\n    });\n}]);\n\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\n    angular.forEach(mdpIconsRegistry, function(icon, index) {\n        $templateCache.put(icon.url, icon.svg);\n    });\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\n    {\n        id: 'mdp-chevron-left',\n        url: 'mdp-chevron-left.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-chevron-right',\n        url: 'mdp-chevron-right.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    },\n    {\n        id: 'mdp-access-time',\n        url: 'mdp-access-time.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\n    },\n    {\n        id: 'mdp-event',\n        url: 'mdp-event.svg',\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\n    }\n]);\n/**\n * Created by Robin Thoni on 6/21/17.\n */\n\nmodule.factory('$mdpLocale', [function () {\n    var $mdpLocale = {\n        time: {\n            minTime: null,\n            maxTime: null,\n            okLabel: \"OK\",\n            cancelLabel: \"Cancel\",\n            timeFormat: \"HH:mm\",\n            noFloat: false,\n            openOnClick: false,\n            autoSwitch: false,\n            ampm: true,\n            clearOnCancel: false\n        },\n        date: {\n            minDate: null,\n            maxDate: null,\n            okLabel: \"OK\",\n            cancelLabel: \"Cancel\",\n            dateFilter: null,\n            dateFormat: \"YYYY-MM-DD\",\n            displayFormat: \"ddd, MMM DD\",\n            noFloat: false,\n            openOnClick: false,\n            clearOnCancel: false\n        }\n    };\n\n    return $mdpLocale;\n}]);\n\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\n   return {\n        restrict: \"EA\",\n        priority: 101,\n        compile: function(element) {\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\n\n            // If we are not a child of an input container, don't do anything\n            if (!inputContainer) return;\n\n            // Add our animation class\n            element.toggleClass('md-input-message-animation', true);\n\n            return {};\n        }\n    }\n\n}]);\n/* global moment, angular */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n  var self = this;\n\n  this.selectingYear = false;\n  this.useUtc = !!options.useUtc;\n  this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n  this.minDate = options.minDate && moment(options.minDate).isValid() ? (this.useUtc ? moment.utc(options.minDate) : moment(options.minDate)) : null;\n  this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? (this.useUtc ? moment.utc(options.maxDate) : moment(options.maxDate)) : null;\n  this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n  this.date = this.useUtc ? moment.utc(currentDate) : moment(currentDate);\n\n  // validate min and max date\n  if (this.minDate && this.maxDate) {\n    if (this.maxDate.isBefore(this.minDate)) {\n      this.maxDate = moment(this.minDate).add(1, 'days');\n    }\n  }\n\n  if (this.date) {\n    // check min date\n    if (this.minDate && this.date.isBefore(this.minDate)) {\n      this.date = moment(this.minDate);\n    }\n\n    // check max date\n    if (this.maxDate && this.date.isAfter(this.maxDate)) {\n      this.date = moment(this.maxDate);\n    }\n  }\n\n  this.yearItems = {\n    currentIndex_: 0,\n    PAGE_SIZE: 5,\n    START: (self.minDate ? self.minDate.year() : 1900),\n    END: (self.maxDate ? self.maxDate.year() : 0),\n    getItemAtIndex: function(index) {\n      if (this.currentIndex_ < index) {\n        this.currentIndex_ = index;\n      }\n      return this.START + index;\n    },\n    getLength: function() {\n      return Math.min(\n        this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n        Math.abs(this.START - this.END) + 1\n      );\n    }\n  };\n\n  $scope.$mdMedia = $mdMedia;\n  $scope.year = this.date.year();\n\n  this.selectYear = function(year) {\n    self.date.year(year);\n    $scope.year = year;\n    self.selectingYear = false;\n    self.animate();\n  };\n\n  this.showYear = function() {\n    self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n    self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n    self.selectingYear = true;\n  };\n\n  this.showCalendar = function() {\n    self.selectingYear = false;\n  };\n\n  this.cancel = function() {\n    $mdDialog.cancel();\n  };\n\n  this.confirm = function() {\n    var date = this.date;\n\n    if (this.minDate && this.date.isBefore(this.minDate)) {\n      date = moment(this.minDate);\n    }\n\n    if (this.maxDate && this.date.isAfter(this.maxDate)) {\n      date = moment(this.maxDate);\n    }\n\n    $mdDialog.hide(date.toDate());\n  };\n\n  this.animate = function() {\n    self.animating = true;\n    $timeout(angular.noop).then(function() {\n      self.animating = false;\n    });\n  };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n  var LABEL_OK = \"OK\",\n    LABEL_CANCEL = \"Cancel\",\n    DISPLAY_FORMAT = \"ddd, MMM DD\",\n    PARENT_GETTER = function() {\n      return undefined;\n    };\n\n  this.setDisplayFormat = function(format) {\n    DISPLAY_FORMAT = format;\n  };\n\n  this.setOKButtonLabel = function(label) {\n    LABEL_OK = label;\n  };\n\n  this.setCancelButtonLabel = function(label) {\n    LABEL_CANCEL = label;\n  };\n\n  this.setDialogParentGetter = function(fn) {\n    PARENT_GETTER = fn;\n  };\n\n  this.$get = [\"$mdDialog\", \"$mdpLocale\", function($mdDialog, $mdpLocale) {\n    var datePicker = function(currentDate, options) {\n      if (!angular.isDate(currentDate)) currentDate = Date.now();\n      if (!angular.isObject(options)) options = {};\n\n      options.displayFormat = options.displayFormat || $mdpLocale.date.displayFormat || DISPLAY_FORMAT;\n\n      var labelOk = options.okLabel || $mdpLocale.date.okLabel || LABEL_OK;\n      var labelCancel = options.cancelLabel || $mdpLocale.date.cancelLabel || LABEL_CANCEL;\n\n\n      return $mdDialog.show({\n        controller: ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\n        controllerAs: 'datepicker',\n        clickOutsideToClose: true,\n        template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n          '<md-dialog-content layout=\"row\" layout-wrap>' +\n          '<div layout=\"column\" layout-align=\"start center\">' +\n          '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n          '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n          '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\n          '</md-toolbar>' +\n          '</div>' +\n          '<div>' +\n          '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n          '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n          '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n          '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n          '</div>' +\n          '</md-virtual-repeat-container>' +\n          '</div>' +\n          '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n          '<md-dialog-actions layout=\"row\">' +\n          '<span flex></span>' +\n          '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + labelCancel + '\">' + labelCancel + '</md-button>' +\n          '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + labelOk + '\">' + labelOk + '</md-button>' +\n          '</md-dialog-actions>' +\n          '</div>' +\n          '</md-dialog-content>' +\n          '</md-dialog>',\n        targetEvent: options.targetEvent,\n        locals: {\n          currentDate: currentDate,\n          options: options\n        },\n        multiple: true,\n        parent: PARENT_GETTER()\n      });\n    };\n\n    return datePicker;\n  }];\n});\n\nfunction CalendarCtrl($scope) {\n\n  var self = this;\n\n  this.getDaysInMonth = function() {\n    var days = self.date.daysInMonth(),\n      firstDay = moment(self.date).date(1).day() - this.dow;\n\n    if (firstDay < 0) firstDay = this.weekDays.length - 1;\n\n    var arr = [];\n    for (var i = 1; i <= (firstDay + days); i++) {\n      var day = null;\n      if (i > firstDay) {\n        day = {\n          value: (i - firstDay),\n          enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\n        };\n      }\n      arr.push(day);\n    }\n\n    return arr;\n  };\n\n  this.isDayEnabled = function(day) {\n    return (!this.minDate || this.minDate <= day) &&\n      (!this.maxDate || this.maxDate >= day) &&\n      (!self.dateFilter || !self.dateFilter(day));\n  };\n\n  this.selectDate = function(dom) {\n    self.date.date(dom);\n  };\n\n  this.nextMonth = function() {\n    self.date.add(1, 'months');\n  };\n\n  this.prevMonth = function() {\n    self.date.subtract(1, 'months');\n  };\n\n  this.updateDaysInMonth = function() {\n    self.daysInMonth = self.getDaysInMonth();\n  };\n\n  this.$onInit = function() {\n    self.daysInMonth = [];\n    self.dow = moment.localeData().firstDayOfWeek();\n    self.weekDays = [].concat(\n      moment.weekdaysMin().slice(self.dow),\n      moment.weekdaysMin().slice(0, self.dow)\n    );\n    $scope.$watch(function() {\n      return self.date.unix();\n    }, function(newValue, oldValue) {\n      if (newValue && newValue !== oldValue)\n        self.updateDaysInMonth();\n    });\n    self.updateDaysInMonth();\n  };\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n  return {\n    restrict: 'E',\n    bindToController: {\n      \"date\": \"=\",\n      \"minDate\": \"=\",\n      \"maxDate\": \"=\",\n      \"dateFilter\": \"=\"\n    },\n    template: '<div class=\"mdp-calendar\">' +\n      '<div layout=\"row\" layout-align=\"space-between center\">' +\n      '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n      '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\n      '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n      '</div>' +\n      '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n      '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n      '</div>' +\n      '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n      '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n      '<md-button class=\"md-icon-button\" aria-label=\"Select day\" ng-mouseenter=\"raised = true\" ng-mouseleave=\"raised = false\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value, \\'md-raised\\': raised || calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n      '</div>' +\n      '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n      '</div>' +\n      '</div>',\n    controller: [\"$scope\", CalendarCtrl],\n    controllerAs: \"calendar\",\n    link: function(scope, element, attrs, ctrl) {\n      var animElements = [\n        element[0].querySelector(\".mdp-calendar-week-days\"),\n        element[0].querySelector('.mdp-calendar-days'),\n        element[0].querySelector('.mdp-calendar-monthyear')\n      ].map(function(a) {\n        return angular.element(a);\n      });\n\n      scope.$watch(function() {\n        return ctrl.date.format(\"YYYYMM\");\n      }, function(newValue, oldValue) {\n        var direction = null;\n\n        if (newValue > oldValue)\n          direction = \"mdp-animate-next\";\n        else if (newValue < oldValue)\n          direction = \"mdp-animate-prev\";\n\n        if (direction) {\n          for (var i in animElements) {\n            animElements[i].addClass(direction);\n            $animate.removeClass(animElements[i], direction);\n          }\n        }\n      });\n    }\n  };\n}]);\n\nfunction formatValidator(value, format) {\n  return !value || angular.isDate(value) || moment(value, format, true).isValid();\n}\n\nfunction compareDateValidator(value, format, otherDate, comparator) {\n  // take only the date part, not the time part\n  if (angular.isDate(otherDate)) {\n    otherDate = moment(otherDate).format(format);\n  }\n  otherDate = moment(otherDate, format, true);\n  var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\n\n  return !value ||\n    angular.isDate(value) ||\n    !otherDate.isValid() ||\n    comparator(date, otherDate);\n}\n\nfunction minDateValidator(value, format, minDate) {\n  var currentMinDate = moment(minDate, \"YYYY-MM-DD\", true);\n  var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\n\n  return !value ||\n    angular.isDate(value) ||\n    !currentMinDate.isValid() ||\n    date.isSameOrAfter(currentMinDate);\n}\n\nfunction maxDateValidator(value, format, maxDate) {\n  var currentMaxDate = moment(maxDate, \"YYYY-MM-DD\", true);\n  var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\n\n  return !value ||\n    angular.isDate(value) ||\n    !currentMaxDate.isValid() ||\n    date.isSameOrBefore(currentMaxDate);\n}\n\nfunction filterValidator(value, format, filter) {\n  var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\n\n  return !value ||\n    angular.isDate(value) ||\n    !angular.isFunction(filter) ||\n    !filter(date.toDate());\n}\n\nfunction requiredValidator(value, ngModel) {\n  return value;\n}\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", \"$mdpLocale\", function($mdpDatePicker, $timeout, $mdpLocale) {\n  return {\n    restrict: 'E',\n    require: ['ngModel', \"^^?form\"],\n    transclude: true,\n    template: function(element, attrs) {\n      var noFloat = angular.isDefined(attrs.mdpNoFloat),\n        placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n        openOnClick = angular.isDefined(attrs.mdpOpenOnClick) || $mdpLocale.date.openOnClick;\n\n      return '<div layout layout-align=\"start start\">' +\n        '<md-button' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\n        '</md-button>' +\n        '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n        '<input name=\"{{ inputName }}\" ng-model=\"model.$viewValue\" ng-required=\"required()\" type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"{{placeholder}}\" placeholder=\"{{placeholder}}\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n        '</md-input-container>' +\n        '</div>';\n    },\n    scope: {\n      \"minDate\": \"=mdpMinDate\",\n      \"maxDate\": \"=mdpMaxDate\",\n      \"okLabel\": \"@?mdpOkLabel\",\n      \"cancelLabel\": \"@?mdpCancelLabel\",\n      \"dateFilter\": \"=mdpDateFilter\",\n      \"dateFormat\": \"@mdpFormat\",\n      \"useUtc\": \"=?mdpUseUtc\",\n      \"placeholder\": \"@mdpPlaceholder\",\n      \"noFloat\": \"=mdpNoFloat\",\n      \"openOnClick\": \"=mdpOpenOnClick\",\n      \"disabled\": \"=?mdpDisabled\",\n      \"inputName\": \"@?mdpInputName\",\n      \"clearOnCancel\": \"=?mdpClearOnCancel\"\n    },\n    link: {\n      pre: function(scope, element, attrs, constollers, $transclude) {\n\n      },\n      post: function(scope, element, attrs, controllers, $transclude) {\n        var ngModel = controllers[0];\n        var form = controllers[1];\n\n        var opts = {\n          get minDate() {\n            return scope.minDate || $mdpLocale.date.minDate;\n          },\n          get maxDate() {\n            return scope.maxDate || $mdpLocale.date.maxDate;\n          },\n          get dateFilter() {\n            return scope.dateFilter || $mdpLocale.date.dateFilter;\n          },\n          get clearOnCancel() {\n            return angular.isDefined(scope.clearOnCancel) ? scope.clearOnCancel : $mdpLocale.date.clearOnCancel;\n          }\n        };\n\n        var inputElement = angular.element(element[0].querySelector('input')),\n          inputContainer = angular.element(element[0].querySelector('md-input-container')),\n          inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n        $transclude(function(clone) {\n          inputContainer.append(clone);\n        });\n\n        var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n        scope.type = scope.dateFormat ? \"text\" : \"date\";\n        scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n        scope.useUtc = scope.useUtc || false;\n\n        scope.model = ngModel;\n\n        scope.isError = function() {\n          return !!ngModel.$invalid && (!ngModel.$pristine || (form != null && form.$submitted));\n        };\n\n        scope.required = function() {\n          return !!attrs.required;\n        };\n\n        // update input element if model has changed\n        ngModel.$formatters.unshift(function(value) {\n          var date = angular.isDate(value) && (scope.useUtc ? moment.utc(value) : moment(value));\n          if (date && date.isValid()) {\n            var strVal = date.format(scope.dateFormat);\n            updateInputElement(strVal);\n            return strVal;\n          } else {\n            updateInputElement(null);\n            return null;\n          }\n        });\n\n        ngModel.$validators.format = function(modelValue, viewValue) {\n          return formatValidator(viewValue, scope.dateFormat);\n        };\n\n        ngModel.$validators.minDate = function(modelValue, viewValue) {\n          return minDateValidator(viewValue, scope.dateFormat, opts.minDate);\n        };\n\n        ngModel.$validators.maxDate = function(modelValue, viewValue) {\n          return maxDateValidator(viewValue, scope.dateFormat, opts.maxDate);\n        };\n\n        ngModel.$validators.filter = function(modelValue, viewValue) {\n          return filterValidator(viewValue, scope.dateFormat, opts.dateFilter);\n        };\n\n        ngModel.$validators.required = function(modelValue, viewValue) {\n          return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n        };\n\n        ngModel.$parsers.unshift(function(value) {\n          var parsed = scope.useUtc ? moment.utc(value, scope.dateFormat, true) : moment(value, scope.dateFormat, true);\n          if (parsed.isValid()) {\n            if (angular.isDate(ngModel.$modelValue)) {\n              var originalModel = scope.useUtc ? moment.utc(ngModel.$modelValue) : moment(ngModel.$modelValue);\n              originalModel.year(parsed.year());\n              originalModel.month(parsed.month());\n              originalModel.date(parsed.date());\n\n              parsed = originalModel;\n            }\n            return parsed.toDate();\n          } else\n            return null;\n        });\n\n        // update input element value\n        function updateInputElement(value) {\n          inputElement[0].value = value;\n          inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n        }\n\n        function updateDate(date) {\n          var value = scope.useUtc ? moment.utc(date, angular.isDate(date) ? null : scope.dateFormat, true) : moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\n            strValue = value.format(scope.dateFormat);\n\n          if (value.isValid()) {\n            updateInputElement(strValue);\n            ngModel.$setViewValue(strValue);\n          } else {\n            updateInputElement(date);\n            ngModel.$setViewValue(date);\n          }\n\n          if (!ngModel.$pristine &&\n            messages.hasClass(\"md-auto-hide\") &&\n            inputContainer.hasClass(\"md-input-invalid\")) {\n            messages.removeClass(\"md-auto-hide\");\n          }\n\n          ngModel.$render();\n        }\n\n        scope.showPicker = function(ev) {\n          $mdpDatePicker(ngModel.$modelValue, {\n            minDate: opts.minDate,\n            maxDate: opts.maxDate,\n            dateFilter: opts.dateFilter,\n            useUtc: scope.useUtc,\n            okLabel: scope.okLabel,\n            cancelLabel: scope.cancelLabel,\n            targetEvent: ev\n          }).then(function(time) {\n            updateDate(time, true);\n          }, function(error) {\n            if (opts.clearOnCancel) {\n              updateDate(null, true);\n            }\n          });\n        };\n\n        function onInputElementEvents(event) {\n          if (event.target.value !== ngModel.$viewVaue)\n            updateDate(event.target.value);\n        }\n\n        inputElement.on(\"reset input blur\", onInputElementEvents);\n\n        scope.$on(\"$destroy\", function() {\n          inputElement.off(\"reset input blur\", onInputElementEvents);\n        });\n\n        // revalidate on constraint change\n        scope.$watch(\"minDate + maxDate\", function() {\n          ngModel.$validate();\n        });\n      }\n    }\n  };\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    scope: {\n      \"minDate\": \"@min\",\n      \"maxDate\": \"@max\",\n      \"okLabel\": \"@?mdpOkLabel\",\n      \"cancelLabel\": \"@?mdpCancelLabel\",\n      \"dateFilter\": \"=mdpDateFilter\",\n      \"dateFormat\": \"@mdpFormat\"\n    },\n    link: function(scope, element, attrs, ngModel, $transclude) {\n      scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n\n      ngModel.$validators.format = function(modelValue, viewValue) {\n        return formatValidator(viewValue, scope.format);\n      };\n\n      ngModel.$validators.minDate = function(modelValue, viewValue) {\n        return minDateValidator(viewValue, scope.format, scope.minDate);\n      };\n\n      ngModel.$validators.maxDate = function(modelValue, viewValue) {\n        return maxDateValidator(viewValue, scope.format, scope.maxDate);\n      };\n\n      ngModel.$validators.filter = function(modelValue, viewValue) {\n        return filterValidator(viewValue, scope.format, scope.dateFilter);\n      };\n\n      function showPicker(ev) {\n        $mdpDatePicker(ngModel.$modelValue, {\n          minDate: scope.minDate,\n          maxDate: scope.maxDate,\n          dateFilter: scope.dateFilter,\n          okLabel: scope.okLabel,\n          cancelLabel: scope.cancelLabel,\n          targetEvent: ev\n        }).then(function(time) {\n          ngModel.$setViewValue(moment(time).format(scope.format));\n          ngModel.$render();\n        });\n      }\n\n      element.on(\"click\", showPicker);\n\n      scope.$on(\"$destroy\", function() {\n        element.off(\"click\", showPicker);\n      });\n    }\n  };\n}]);\n\n/* global moment, angular */\n\nfunction TimePickerCtrl($scope, $mdDialog, time, useUtc, autoSwitch, ampm, $mdMedia) {\n  var self = this;\n  this.VIEW_HOURS = 1;\n  this.VIEW_MINUTES = 2;\n  this.currentView = this.VIEW_HOURS;\n  this.autoSwitch = !!autoSwitch;\n  this.ampm = !!ampm;\n  this.useUtc = !!useUtc;\n  this.hoursFormat = self.ampm ? \"h\" : \"H\";\n  this.minutesFormat = \"mm\";\n  this.time = this.useUtc ? moment.utc(time) : moment(time);\n  this.clockHours = parseInt(this.time.format(this.hoursFormat));\n  this.clockMinutes = parseInt(this.time.format(this.minutesFormat));\n\n  $scope.$mdMedia = $mdMedia;\n\n  this.switchView = function() {\n    self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n  };\n\n  this.setAM = function() {\n    if (self.time.hours() >= 12) {\n      self.time.hour(self.time.hour() - 12);\n    }\n  };\n\n  this.setPM = function() {\n    if (self.time.hours() < 12)\n      self.time.hour(self.time.hour() + 12);\n  };\n\n  this.cancel = function() {\n    $mdDialog.cancel();\n  };\n\n  this.confirm = function() {\n    $mdDialog.hide(this.time.toDate());\n  };\n}\n\nfunction ClockCtrl($scope) {\n  var self = this;\n  var TYPE_HOURS = \"hours\";\n  var TYPE_MINUTES = \"minutes\";\n\n  this.$onInit = function() {\n    self.STEP_DEG = 360 / 12;\n    self.steps = [];\n    this.CLOCK_TYPES = {\n      \"hours\": {\n        range: self.ampm ? 12 : 24,\n      },\n      \"minutes\": {\n        range: 60,\n      }\n    };\n    self.type = self.type || \"hours\";\n\n    switch (self.type) {\n      case TYPE_HOURS:\n        var f = self.ampm ? 1 : 2;\n        var t = self.ampm ? 12 : 23;\n        for (var i = f; i <= t; i += f) {\n          self.steps.push(i);\n        }\n        if (!self.ampm) {\n          self.steps.push(0);\n        }\n        self.selected = self.time.hours() || 0;\n        if (self.ampm && self.selected > 12) {\n          self.selected -= 12;\n        }\n        break;\n\n      case TYPE_MINUTES:\n        for (var i = 5; i <= 55; i += 5) {\n          self.steps.push(i);\n        }\n        self.steps.push(0);\n        self.selected = self.time.minutes() || 0;\n        break;\n\n    }\n  };\n\n  this.getPointerStyle = function() {\n    var divider = 1;\n    switch (self.type) {\n      case TYPE_HOURS:\n        divider = self.ampm ? 12 : 24;\n        break;\n      case TYPE_MINUTES:\n        divider = 60;\n        break;\n    }\n\n    var degrees = Math.round(self.selected * (360 / divider)) - 180;\n    return {\n      \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n      \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n      \"transform\": \"rotate(\" + degrees + \"deg)\"\n    };\n  };\n\n  this.setTimeByDeg = function(deg) {\n    deg = deg >= 360 ? 0 : deg;\n    var divider = 0;\n    switch (self.type) {\n      case TYPE_HOURS:\n        divider = self.ampm ? 12 : 24;\n        break;\n      case TYPE_MINUTES:\n        divider = 60;\n        break;\n    }\n\n    self.setTime(\n      Math.round(divider / 360 * deg)\n    );\n  };\n\n  this.setTime = function(time, type) {\n    this.selected = time;\n\n    switch (self.type) {\n      case TYPE_HOURS:\n        if (self.ampm && self.time.format(\"A\") == \"PM\") time += 12;\n        this.time.hours(time);\n        break;\n      case TYPE_MINUTES:\n        if (time > 59) time -= 60;\n        this.time.minutes(time);\n        break;\n    }\n  };\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n  return {\n    restrict: 'E',\n    bindToController: {\n      'type': '@?',\n      'time': '=',\n      'autoSwitch': '=?',\n      'ampm': '=?'\n    },\n    replace: true,\n    template:\n    ['<md-card class=\"mdp-clock\">',\n    '  <div class=\"mdp-clock-container\">',\n    '    <md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>',\n    '    <md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">',\n    '      <span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>',\n    '    </md-toolbar>',\n    '    <md-button ng-class=\"{ \\'md-primary\\': clock.selected == step, \\'md-raised\\': raised || clock.selected == step  }\" ',\n    '               ng-mouseenter=\"raised = true\" ',\n    '               ng-mouseleave=\"raised = false\" ',\n    '               class=\"md-icon-button mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\"',\n    '               aria-label=\"{{step}}\"',\n    '               ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\" ng-bind=\"step\"></md-button>',\n    '  </div>',\n    '</md-card>'].join(''),\n    controller: [\"$scope\", ClockCtrl],\n    controllerAs: \"clock\",\n    link: function(scope, element, attrs, ctrl) {\n      var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n\n        timepickerCtrl = scope.$parent.timepicker;\n      scope.raised = false;\n\n      var onEvent = function(event) {\n        var containerCoords = event.currentTarget.getClientRects()[0];\n        var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n          y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n        var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n        $timeout(function() {\n          ctrl.setTimeByDeg(deg + 180);\n          if (ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n        });\n      };\n\n      element.on(\"mousedown\", function() {\n        element.on(\"mousemove\", onEvent);\n      });\n\n      element.on(\"mouseup\", function(e) {\n        element.off(\"mousemove\");\n      });\n\n      element.on(\"click\", onEvent);\n      scope.$on(\"$destroy\", function() {\n        element.off(\"click\", onEvent);\n        element.off(\"mousemove\", onEvent);\n\n      });\n    }\n  };\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n  var LABEL_OK = \"OK\",\n    LABEL_CANCEL = \"Cancel\",\n    PARENT_GETTER = function() {\n      return undefined;\n    };\n\n  this.setOKButtonLabel = function(label) {\n    LABEL_OK = label;\n  };\n\n  this.setCancelButtonLabel = function(label) {\n    LABEL_CANCEL = label;\n  };\n\n  this.setDialogParentGetter = function(fn) {\n    PARENT_GETTER = fn;\n  };\n\n  this.$get = [\"$mdDialog\", \"$mdpLocale\", function($mdDialog, $mdpLocale) {\n    var timePicker = function(time, options) {\n      if (!angular.isDate(time)) time = Date.now();\n      if (!angular.isObject(options)) options = {};\n\n      var labelOk = options.okLabel || $mdpLocale.time.okLabel || LABEL_OK;\n      var labelCancel = options.cancelLabel || $mdpLocale.time.cancelLabel || LABEL_CANCEL;\n\n      return $mdDialog.show({\n        controller: ['$scope', '$mdDialog', 'time', 'useUtc', 'autoSwitch', 'ampm', '$mdMedia', TimePickerCtrl],\n        controllerAs: 'timepicker',\n        clickOutsideToClose: true,\n        template:\n        ['<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">',\n        '  <md-dialog-content layout-gt-xs=\"row\" layout-wrap>',\n        '    <md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">',\n        '      <div class=\"mdp-timepicker-selected-time\">',\n        '        <span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\" ng-bind=\"timepicker.time.format(timepicker.hoursFormat)\"></span>:',\n        '        <span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\" ng-bind=\"timepicker.time.format(timepicker.minutesFormat)\"></span>',\n        '      </div>',\n        '      <div layout=\"column\" ng-show=\"timepicker.ampm\" class=\"mdp-timepicker-selected-ampm\">',\n        '        <span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>',\n        '        <span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>',\n        '      </div>',\n        '    </md-toolbar>',\n        '    <md-content>',\n        '      <div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">',\n        '        <mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>',\n        '        <mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>',\n        '      </div>',\n        '      <md-dialog-actions layout=\"row\">',\n        '        <span flex></span>',\n        '        <md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + labelCancel + '\">' + labelCancel + '</md-button>',\n        '        <md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + labelOk + '\">' + labelOk + '</md-button>',\n        '      </md-dialog-actions>',\n        '    </md-content>',\n        '  </md-dialog-content>',\n        '</md-dialog>'].join(''),\n        targetEvent: options.targetEvent,\n        locals: {\n          time: time,\n          autoSwitch: options.autoSwitch,\n          ampm: angular.isDefined(options.ampm) ? options.ampm : $mdpLocale.time.ampm,\n          useUtc: options.useUtc\n        },\n        multiple: true,\n        parent: PARENT_GETTER()\n      });\n    };\n\n    return timePicker;\n  }];\n});\n\nfunction compareTimeValidator(value, format, otherTime, comparator) {\n  // take only the date part, not the time part\n  if (angular.isDate(otherTime)) {\n    otherTime = moment(otherTime).format(format);\n  }\n  otherTime = moment(otherTime, format, true);\n  var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\n\n  return !value ||\n    angular.isDate(value) ||\n    !otherTime.isValid() ||\n    comparator(date, otherTime);\n}\n\nfunction minTimeValidator(value, format, minTime) {\n  return compareTimeValidator(value, format, minTime, function(t, mt) {\n    return t.isSameOrAfter(mt);\n  });\n}\n\nfunction maxTimeValidator(value, format, maxTime) {\n  return compareTimeValidator(value, format, maxTime, function(t, mt) {\n    return t.isSameOrBefore(mt);\n  });\n}\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", \"$mdpLocale\", function($mdpTimePicker, $timeout, $mdpLocale) {\n  return {\n    restrict: 'E',\n    require: ['ngModel', \"^^?form\"],\n    transclude: true,\n    template: function(element, attrs) {\n      var noFloat = angular.isDefined(attrs.mdpNoFloat),\n        placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n        openOnClick = angular.isDefined(attrs.mdpOpenOnClick) || $mdpLocale.time.openOnClick;\n\n      return ['<div layout layout-align=\"start start\">',\n      '  <md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>',\n      '    <md-icon md-svg-icon=\"mdp-access-time\"></md-icon>',\n      '  </md-button>',\n      '  <md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">',\n      '    <input name=\"{{ inputName }}\" ng-model=\"model.$viewValue\" ng-required=\"required()\" type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"{{placeholder}}\" placeholder=\"{{placeholder}}\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />',\n      '  </md-input-container>',\n      '</div>'].join('');\n    },\n    scope: {\n      \"minTime\": \"=?mdpMinTime\",\n      \"maxTime\": \"=?mdpMaxTime\",\n      \"timeFormat\": \"@mdpFormat\",\n      \"okLabel\": \"@?mdpOkLabel\",\n      \"cancelLabel\": \"@?mdpCancelLabel\",\n      \"useUtc\": \"=?mdpUseUtc\",\n      \"placeholder\": \"@mdpPlaceholder\",\n      \"autoSwitch\": \"=?mdpAutoSwitch\",\n      \"disabled\": \"=?mdpDisabled\",\n      \"ampm\": \"=?mdpAmpm\",\n      \"inputName\": \"@?mdpInputName\",\n      \"clearOnCancel\": \"=?mdpClearOnCancel\"\n    },\n    link: function(scope, element, attrs, controllers, $transclude) {\n      var ngModel = controllers[0];\n      var form = controllers[1];\n\n      var opts = {\n        get minTime() {\n          return scope.minTime || $mdpLocale.time.minTime;\n        },\n        get maxTime() {\n          return scope.maxTime || $mdpLocale.time.maxTime;\n        },\n        get clearOnCancel() {\n          return angular.isDefined(scope.clearOnCancel) ? scope.clearOnCancel : $mdpLocale.time.clearOnCancel;\n        }\n      };\n\n      var inputElement = angular.element(element[0].querySelector('input')),\n        inputContainer = angular.element(element[0].querySelector('md-input-container')),\n        inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n      $transclude(function(clone) {\n        inputContainer.append(clone);\n      });\n\n      var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n\n      scope.type = scope.timeFormat || $mdpLocale.time.timeFormat ? \"text\" : \"time\";\n      scope.timeFormat = scope.timeFormat || $mdpLocale.time.timeFormat || \"HH:mm\";\n      scope.autoSwitch = scope.autoSwitch === undefined ? $mdpLocale.time.autoSwitch : scope.autoSwitch;\n      scope.useUtc = scope.useUtc || false;\n      scope.model = ngModel;\n\n      scope.isError = function() {\n        return !!ngModel.$invalid && (!ngModel.$pristine || (form != null && form.$submitted));\n      };\n\n      scope.required = function() {\n        return !!attrs.required;\n      };\n\n      scope.$watch(function() {\n        return ngModel.$error;\n      }, function(newValue, oldValue) {\n        inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n      }, true);\n\n      // update input element if model has changed\n      ngModel.$formatters.unshift(function(value) {\n        var time = angular.isDate(value) && (scope.useUtc ? moment.utc(value) : moment(value));\n        if (time && time.isValid()) {\n          var strVal = time.format(scope.timeFormat);\n          updateInputElement(strVal);\n          return strVal;\n        } else {\n          updateInputElement(null);\n          return null;\n        }\n      });\n\n      ngModel.$validators.format = function(modelValue, viewValue) {\n        return !viewValue || angular.isDate(viewValue) || (scope.useUtc ? moment.utc(viewValue, scope.timeFormat, true) : moment(viewValue, scope.timeFormat, true)).isValid();\n      };\n\n      ngModel.$validators.required = function(modelValue, viewValue) {\n        return angular.isUndefined(attrs.required) || attrs.required === false || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n      };\n\n      ngModel.$validators.minTime = function(modelValue, viewValue) {\n        return minTimeValidator(viewValue, scope.timeFormat, opts.minTime);\n      };\n\n      ngModel.$validators.maxTime = function(modelValue, viewValue) {\n        return maxTimeValidator(viewValue, scope.timeFormat, opts.maxTime);\n      };\n\n\n      ngModel.$parsers.unshift(function(value) {\n        var parsed = scope.useUtc ? moment.utc(value, scope.timeFormat, true) : moment(value, scope.timeFormat, true);\n        if (parsed.isValid()) {\n          if (angular.isDate(ngModel.$modelValue)) {\n            var originalModel = scope.useUtc ? moment.utc(ngModel.$modelValue) : moment(ngModel.$modelValue);\n            originalModel.minutes(parsed.minutes());\n            originalModel.hours(parsed.hours());\n            originalModel.seconds(parsed.seconds());\n\n            parsed = originalModel;\n          }\n          return parsed.toDate();\n        } else\n          return null;\n      });\n\n      // update input element value\n      function updateInputElement(value) {\n        inputElement[0].value = value;\n        inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n      }\n\n      function updateTime(time) {\n        var value = scope.useUtc ? moment.utc(time, angular.isDate(time) ? null : scope.timeFormat, true) : moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\n          strValue = value.format(scope.timeFormat);\n\n        if (value.isValid()) {\n          updateInputElement(strValue);\n          ngModel.$setViewValue(strValue);\n        } else {\n          updateInputElement(time);\n          ngModel.$setViewValue(time);\n        }\n\n        if (!ngModel.$pristine &&\n          messages.hasClass(\"md-auto-hide\") &&\n          inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n        ngModel.$render();\n      }\n\n      scope.showPicker = function(ev) {\n        $mdpTimePicker(ngModel.$modelValue, {\n          targetEvent: ev,\n          okLabel: scope.okLabel,\n          cancelLabel: scope.cancelLabel,\n          autoSwitch: scope.autoSwitch,\n          ampm: scope.ampm,\n          useUtc: scope.useUtc\n        }).then(function(time) {\n          updateTime(time, true);\n        }, function(error) {\n          if (opts.clearOnCancel) {\n            updateTime(null, true);\n          }\n        });\n      };\n\n      function onInputElementEvents(event) {\n        if (event.target.value !== ngModel.$viewVaue)\n          updateTime(event.target.value);\n      }\n\n      inputElement.on(\"reset input blur\", onInputElementEvents);\n\n      scope.$on(\"$destroy\", function() {\n        inputElement.off(\"reset input blur\", onInputElementEvents);\n      });\n\n      // revalidate on constraint change\n      scope.$watch(\"minTime + maxTime\", function() {\n        ngModel.$validate();\n      });\n    }\n  };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    scope: {\n      \"timeFormat\": \"@mdpFormat\",\n      \"okLabel\": \"@?mdpOkLabel\",\n      \"cancelLabel\": \"@?mdpCancelLabel\",\n      \"autoSwitch\": \"=?mdpAutoSwitch\",\n      \"ampm\": \"=?mdpAmpm\"\n    },\n    link: function(scope, element, attrs, ngModel, $transclude) {\n      scope.format = scope.format || \"HH:mm\";\n\n      function showPicker(ev) {\n        $mdpTimePicker(ngModel.$modelValue, {\n          targetEvent: ev,\n          autoSwitch: scope.autoSwitch,\n          okLabel: scope.okLabel,\n          cancelLabel: scope.cancelLabel,\n          ampm: scope.ampm\n        }).then(function(time) {\n          ngModel.$setViewValue(moment(time).format(scope.format));\n          ngModel.$render();\n        });\n      }\n\n      element.on(\"click\", showPicker);\n\n      scope.$on(\"$destroy\", function() {\n        element.off(\"click\", showPicker);\n      });\n    }\n  };\n}]);\n\n})();"]}
{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","$mdMedia","$timeout","currentDate","options","self","this","selectingYear","useUtc","displayFormat","minDate","moment","isValid","utc","maxDate","dateFilter","angular","isFunction","date","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","toDate","animating","noop","then","CalendarCtrl","Date","now","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","daysInMonth","getDaysInMonth","days","firstDay","day","length","arr","i","value","enabled","isDayEnabled","push","selectDate","dom","nextMonth","prevMonth","subtract","updateDaysInMonth","$watch","unix","newValue","oldValue","formatValidator","format","isDate","minDateValidator","maxDateValidator","filterValidator","filter","TimePickerCtrl","time","autoSwitch","ampm","VIEW_HOURS","VIEW_MINUTES","VIEW_SECONDS","currentView","hoursFormat","minutesFormat","secondsFormat","clockHours","parseInt","clockMinutes","minutes","clockSeconds","seconds","setAM","hours","hour","setPM","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","TYPE_SECONDS","STEP_DEG","steps","CLOCK_TYPES","range","getPointerStyle","divider","type","degrees","round","selected","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","init","f","t","module","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","directive","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","provider","LABEL_OK","LABEL_CANCEL","DISPLAY_FORMAT","setDisplayFormat","setOKButtonLabel","label","setCancelButtonLabel","$get","datePicker","undefined","isObject","show","controller","controllerAs","clickOutsideToClose","template","targetEvent","locals","skipHide","$window","link","scope","attrs","on","getSelection","toString","setSelectionRange","$animate","bindToController","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","$mdpDatePicker","require","transclude","noFloat","isDefined","mdpNoFloat","placeholder","mdpPlaceholder","openOnClick","mdpOpenOnClick","mdpDisabled","dateFormat","disabled","pre","ngModel","$transclude","post","updateInputElement","inputElement","inputContainerCtrl","setHasValue","$isEmpty","updateDate","strValue","caretPosition","selectionStart","$setViewValue","$pristine","messages","hasClass","$render","selectionEnd","onInputElementEvents","event","target","$viewValue","clone","append","model","isError","$invalid","$formatters","unshift","$validators","modelValue","viewValue","required","isUndefined","$parsers","parsed","$modelValue","originalModel","month","showPicker","ev","$on","off","replace","timepickerCtrl","$parent","timepicker","onEvent","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","switchView","e","timePicker","$mdpTimePicker","timeFormat","updateTime","$error","setInvalid","Object","keys"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\r\n\r\nvar module = angular.module(\"mdPickers\", [\r\n\t\"ngMaterial\",\r\n\t\"ngAnimate\",\r\n\t\"ngAria\"\r\n]);\r\n\r\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\r\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\r\n\t\t$mdIconProvider.icon(icon.id, icon.url);\r\n\t});\r\n}]);\r\n\r\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\r\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\r\n\t\t$templateCache.put(icon.url, icon.svg);\r\n\t});\r\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\r\n    {\r\n        id: 'mdp-chevron-left',\r\n        url: 'mdp-chevron-left.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-chevron-right',\r\n        url: 'mdp-chevron-right.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-access-time',\r\n        url: 'mdp-access-time.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-event',\r\n        url: 'mdp-event.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    }\r\n]);\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\r\n   return {\r\n        restrict: \"EA\",\r\n        priority: 101,\r\n        compile: function(element) {\r\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\r\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\r\n            \r\n            // If we are not a child of an input container, don't do anything\r\n            if (!inputContainer) return;\r\n            \r\n            // Add our animation class\r\n            element.toggleClass('md-input-message-animation', true);\r\n            \r\n            return {};\r\n        }\r\n    } \r\n}]);\n/* global moment, angular */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n    var self = this;\n\n    this.selectingYear = false;\n    this.useUtc = !!options.useUtc;\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? (this.useUtc ? moment.utc(options.minDate) : moment(options.minDate)) : null;\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? (this.useUtc ? moment.utc(options.maxDate) : moment(options.maxDate)) : null;\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n\n    this.date = this.useUtc ? moment.utc(currentDate) : moment(currentDate);\n\n    // validate min and max date\n\tif (this.minDate && this.maxDate) {\n\t\tif (this.maxDate.isBefore(this.minDate)) {\n\t\t\tthis.maxDate = moment(this.minDate).add(1, 'days');\n\t\t}\n\t}\n\n\tif (this.date) {\n\t\t// check min date\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n\t\t\tthis.date = moment(this.minDate);\n    \t}\n\n    \t// check max date\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n\t\t\tthis.date = moment(this.maxDate);\n    \t}\n\t}\n\n\tthis.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n        \tif(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n\n        \treturn this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.year();\n\n\tthis.selectYear = function(year) {\n        self.date.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n\n    this.showYear = function() {\n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n\n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n    \tvar date = this.date;\n\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n    \t\tdate = moment(this.minDate);\n    \t}\n\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n    \t\tdate = moment(this.maxDate);\n    \t}\n\n        $mdDialog.hide(date.toDate());\n    };\n\n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })\n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        //DISPLAY_FORMAT = \"ddd, MMM DD\";\n        DISPLAY_FORMAT = \"D MMM\";\n\n    this.setDisplayFormat = function(format) {\n        DISPLAY_FORMAT = format;\n    };\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(currentDate, options) {\n            if (currentDate != undefined) {\n                currentDate = new Date(currentDate);\n            }\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            options.displayFormat = DISPLAY_FORMAT;\n\n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\n                                    '</md-toolbar>' +\n                                '</div>' +\n                                '<div>' +\n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    options: options\n                },\n                skipHide: true\n            });\n        };\n\n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n\tvar self = this;\n\n    if (this.date == null) {\n        this.date = Date.now();\n    }\n\n\tthis.dow = moment.localeData().firstDayOfWeek();\n\n    this.weekDays = [].concat(\n        moment.weekdaysMin().slice(\n            this.dow\n        ),\n        moment.weekdaysMin().slice(\n            0,\n            this.dow\n        )\n    );\n\n    this.daysInMonth = [];\n\n    this.getDaysInMonth = function() {\n        var days = self.date.daysInMonth(),\n            firstDay = moment(self.date).date(1).day() - this.dow;\n\n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\n\n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\n                };\n            }\n            arr.push(day);\n        }\n\n        return arr;\n    };\n\n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) &&\n            (!this.maxDate || this.maxDate >= day) &&\n            (!self.dateFilter || !self.dateFilter(day));\n    };\n\n    this.selectDate = function(dom) {\n        self.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date.subtract(1, 'months');\n    };\n\n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n\n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    })\n\n    self.updateDaysInMonth();\n}\n\nmodule.directive('selectOnClick', ['$window', function ($window) {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n            element.on('click', function () {\n                if (!$window.getSelection().toString()) {\n                    // Required for mobile Safari\n                    this.setSelectionRange(0, this.value.length)\n                }\n            });\n        }\n    };\n}]);\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\",\n            \"dateFilter\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a);\n            });\n\n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n\n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n\n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nfunction formatValidator(value, format) {\n    return !value || angular.isDate(value) || moment(value, format, true).isValid();\n}\n\nfunction minDateValidator(value, format, minDate) {\n    var minDate = moment(minDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !minDate.isValid();// ||\n            //date.isSameOrAfter(minDate);\n}\n\nfunction maxDateValidator(value, format, maxDate) {\n    var maxDate = moment(maxDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !maxDate.isValid();// ||\n            //date.isSameOrBefore(maxDate);\n}\n\nfunction filterValidator(value, format, filter) {\n    var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\n\n    return !value ||\n            angular.isDate(value) ||\n            !angular.isFunction(filter) ||\n            !filter(date);\n}\n\nfunction requiredValidator(value, ngModel) {\n    return value\n}\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n\n            return '<div layout layout-align=\"start start\" >' +\n                    '<md-button' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' select-on-click />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n            \"useUtc\": \"=?mdpUseUtc\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"noFloat\": \"=mdpNoFloat\",\n            \"openOnClick\": \"=mdpOpenOnClick\",\n            \"disabled\": \"=?mdpDisabled\"\n        },\n        link: {\n            pre: function(scope, element, attrs, ngModel, $transclude) {\n\n            },\n            post: function(scope, element, attrs, ngModel, $transclude) {\n                var inputElement = angular.element(element[0].querySelector('input')),\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n                $transclude(function(clone) {\n                   inputContainer.append(clone);\n                });\n\n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n                scope.type = scope.dateFormat ? \"text\" : \"date\";\n                scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n                scope.useUtc = scope.useUtc || false;\n                scope.model = ngModel;\n\n                scope.isError = function() {\n                    return !ngModel.$pristine && !!ngModel.$invalid;\n                };\n\n                // update input element if model has changed\n                ngModel.$formatters.unshift(function(value) {\n                    var date = angular.isDate(value) && (scope.useUtc ? moment.utc(value) : moment(value));\n                    if(date && date.isValid())\n                        updateInputElement(date.format(scope.dateFormat));\n                    else\n                        updateInputElement(null);\n                });\n\n                ngModel.$validators.format = function(modelValue, viewValue) {\n                    return formatValidator(viewValue, scope.dateFormat);\n                };\n\n                ngModel.$validators.minDate = function(modelValue, viewValue) {\n                    return minDateValidator(viewValue, scope.dateFormat, scope.minDate);\n                };\n\n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                    return maxDateValidator(viewValue, scope.dateFormat, scope.maxDate);\n                };\n\n                ngModel.$validators.filter = function(modelValue, viewValue) {\n                    return filterValidator(viewValue, scope.dateFormat, scope.dateFilter);\n                };\n\n                ngModel.$validators.required = function(modelValue, viewValue) {\n                    return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n                };\n\n                ngModel.$parsers.unshift(function(value) {\n                    var parsed = scope.useUtc ? moment.utc(value, scope.dateFormat, true) : moment(value, scope.dateFormat, true);\n                    if(parsed.isValid()) {\n                        if(angular.isDate(ngModel.$modelValue)) {\n                            var originalModel = scope.useUtc ? moment.utc(ngModel.$modelValue) : moment(ngModel.$modelValue);\n                            originalModel.year(parsed.year());\n                            originalModel.month(parsed.month());\n                            originalModel.date(parsed.date());\n\n                            parsed = originalModel;\n                        }\n                        return parsed.format(scope.dateFormat);\n                    } else\n                        return null;\n                });\n\n                // update input element value\n                function updateInputElement(value) {\n                    inputElement[0].value = value;\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n                }\n\n                function updateDate(date) {\n                    var value = scope.useUtc ? moment.utc(date, angular.isDate(date) ? null : scope.dateFormat, true) : moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\n                        strValue = value.format(scope.dateFormat);\n\n                    var caretPosition = inputElement[0].selectionStart;\n\n                    if(value.isValid()) {\n                        updateInputElement(strValue);\n                        ngModel.$setViewValue(strValue);\n                    } else {\n                        updateInputElement(date);\n                        ngModel.$setViewValue(date);\n                    }\n\n                    if(!ngModel.$pristine &&\n                        messages.hasClass(\"md-auto-hide\") &&\n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                    ngModel.$render();\n                    inputElement[0].selectionStart = inputElement[0].selectionEnd = caretPosition;\n                }\n\n                scope.showPicker = function(ev) {\n                    $mdpDatePicker(ngModel.$modelValue, {\n                \t    minDate: scope.minDate,\n                \t    maxDate: scope.maxDate,\n                \t    dateFilter: scope.dateFilter,\n                        useUtc: scope.useUtc,\n                \t    targetEvent: ev\n            \t    }).then(updateDate);\n                };\n\n                function onInputElementEvents(event) {\n                    if(event.target.value !== ngModel.$viewValue)\n                        updateDate(event.target.value);\n                }\n\n                inputElement.on(\"reset input blur\", onInputElementEvents);\n\n                scope.$on(\"$destroy\", function() {\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\n                });\n            }\n        }\n    };\n}]);\n\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"minDate\": \"@min\",\n            \"maxDate\": \"@max\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return formatValidator(viewValue, scope.format);\n            };\n\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\n                return minDateValidator(viewValue, scope.format, scope.minDate);\n            };\n\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                return maxDateValidator(viewValue, scope.format, scope.maxDate);\n            };\n\n            ngModel.$validators.filter = function(modelValue, viewValue) {\n                return filterValidator(viewValue, scope.format, scope.dateFilter);\n            };\n\n            function showPicker(ev) {\n                $mdpDatePicker(ngModel.$modelValue, {\n            \t    minDate: scope.minDate,\n            \t    maxDate: scope.maxDate,\n            \t    dateFilter: scope.dateFilter,\n            \t    targetEvent: ev\n        \t    }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n/* global moment, angular */\n\nfunction TimePickerCtrl($scope, $mdDialog, time, useUtc, autoSwitch, ampm, $mdMedia) {\n    var self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.VIEW_SECONDS = 3;\n    this.currentView = this.VIEW_HOURS;\n    this.autoSwitch = !!autoSwitch;\n    this.ampm = !!ampm;\n    this.useUtc = !!useUtc;\n\n    this.time = this.useUtc ? moment.utc(time) : moment(time);\n    this.hoursFormat = this.ampm ? \"hh\" : \"HH\";\n    this.minutesFormat = \"mm\";\n    this.secondsFormat = \"ss\";\n\n    this.clockHours = parseInt(this.time.format(this.hoursFormat));\n    this.clockMinutes = parseInt(this.time.minutes());\n    this.clockSeconds = parseInt(this.time.seconds());\n\n\tthis.setAM = function() {\n        if(self.time.hours() >= 12)\n            self.time.hour(self.time.hour() - 12);\n\t};\n\n    this.setPM = function() {\n        if(self.time.hours() < 12)\n            self.time.hour(self.time.hour() + 12);\n\t};\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.time.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    var TYPE_SECONDS = \"seconds\";\n    var self = this;\n\n    this.STEP_DEG = 360 / 12;\n    this.steps = [];\n\n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: self.ampm ? 12 : 24,\n        },\n        \"minutes\": {\n            range: 60,\n        },\n        \"seconds\": {\n            range: 60,\n        }\n    }\n\n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = self.ampm ? 12 : 24;\n                break;\n            case TYPE_MINUTES:\n            case TYPE_SECONDS:\n                divider = 60;\n                break;\n        }\n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return {\n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n\n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = self.ampm ? 12 : 24;\n                break;\n            case TYPE_MINUTES:\n            case TYPE_SECONDS:\n                divider = 60;\n                break;\n        }\n\n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n\n    this.setTime = function(time, type) {\n        this.selected = time;\n\n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.ampm && self.time.format(\"A\") == \"PM\") time += 12;\n                this.time.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time.minutes(time);\n                break;\n            case TYPE_SECONDS:\n                if(time > 59) time -= 60;\n                this.time.seconds(time);\n                break;\n        }\n\n    };\n\n    this.init = function() {\n        self.type = self.type || \"hours\";\n        switch(self.type) {\n            case TYPE_HOURS:\n                var f = self.ampm ? 1 : 2;\n                var t = self.ampm ? 12 : 23;\n                for(var i = f; i <= t; i+=f)\n                    self.steps.push(i);\n                if (!self.ampm) self.steps.push(0);\n                self.selected = self.time.hours() || 0;\n                if(self.ampm && self.selected > 12) self.selected -= 12;\n\n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minutes() || 0;\n\n                break;\n            case TYPE_SECONDS:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.seconds() || 0;\n\n                break;\n        }\n    };\n\n    this.init();\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?',\n            'ampm': '=?'\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n                timepickerCtrl = scope.$parent.timepicker;\n\n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n                });\n            };\n\n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n\n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\");\n            });\n\n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent);\n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\";\n\n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n\n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n\n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(time, options) {\n            if(!angular.isDate(time)) time = Date.now();\n            if (!angular.isObject(options)) options = {};\n\n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'time', 'useUtc', 'autoSwitch', 'ampm', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(timepicker.hoursFormat) }}</span>:' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(timepicker.minutesFormat) }}</span>:' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_SECONDS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_SECONDS\">{{ timepicker.time.format(timepicker.secondsFormat) }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" ng-show=\"timepicker.ampm\" class=\"mdp-timepicker-selected-ampm\">' +\n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>' +\n                                    '</div>' +\n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" ampm=\"timepicker.ampm\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"seconds\" ng-switch-when=\"3\"></mdp-clock>' +\n                                    '</div>' +\n\n                                    '<md-dialog-actions layout=\"row\">' +\n\t                                \t'<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    time: time,\n                    autoSwitch: options.autoSwitch,\n                    useUtc: options.useUtc,\n                    ampm: options.ampm\n                },\n                skipHide: true\n            });\n        };\n\n        return timePicker;\n    }];\n});\n\nmodule.directive('selectOnClick', ['$window', function ($window) {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n            element.on('click', function () {\n                if (!$window.getSelection().toString()) {\n                    // Required for mobile Safari\n                    this.setSelectionRange(0, this.value.length)\n                }\n            });\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n\n            return '<div layout layout-align=\"start start\" >' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + '>' +\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\"' + (angular.isDefined(attrs.mdpDisabled) ? ' ng-disabled=\"disabled\"' : '') + ' aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' select-on-click />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"useUtc\": \"=?mdpUseUtc\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"disabled\": \"=?mdpDisabled\",\n            \"ampm\": \"=?mdpAmpm\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n\n            $transclude(function(clone) {\n               inputContainer.append(clone);\n            });\n\n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n\n            scope.type = scope.timeFormat ? \"text\" : \"time\"\n            scope.timeFormat = scope.timeFormat || \"HH:mm\";\n            scope.useUtc = scope.useUtc || false;\n            scope.autoSwitch = scope.autoSwitch || false;\n\n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n\n            // update input element if model has changed\n            ngModel.$formatters.unshift(function(value) {\n                var time = angular.isDate(value) && (scope.useUtc ? moment.utc(value) : moment(value));\n                if(time && time.isValid())\n                    updateInputElement(time.format(scope.timeFormat));\n                else\n                    updateInputElement(null);\n            });\n\n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return !viewValue || angular.isDate(viewValue) || (scope.useUtc ? moment.utc(viewValue, scope.timeFormat, true) : moment(viewValue, scope.timeFormat, true)).isValid();\n            };\n\n            ngModel.$validators.required = function(modelValue, viewValue) {\n                return angular.isUndefined(attrs.required) || !ngModel.$isEmpty(modelValue) || !ngModel.$isEmpty(viewValue);\n            };\n\n            ngModel.$parsers.unshift(function(value) {\n                var parsed = scope.useUtc ? moment.utc(value, scope.timeFormat, true) : moment(value, scope.timeFormat, true);\n                if(parsed.isValid()) {\n                    if(angular.isDate(ngModel.$modelValue)) {\n                        var originalModel = scope.useUtc ? moment.utc(ngModel.$modelValue) : moment(ngModel.$modelValue);\n                        originalModel.minutes(parsed.minutes());\n                        originalModel.hours(parsed.hours());\n                        originalModel.seconds(parsed.seconds());\n\n                        parsed = originalModel;\n                    }\n                    return parsed.toDate();\n                } else\n                    return null;\n            });\n\n            // update input element value\n            function updateInputElement(value) {\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n\n            function updateTime(time) {\n                var value = scope.useUtc ? moment.utc(time, angular.isDate(time) ? null : scope.timeFormat, true) : moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\n                    strValue = value.format(scope.timeFormat);\n\n                var caretPosition = inputElement[0].selectionStart;\n\n                if(value.isValid()) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(strValue);\n                } else {\n                    updateInputElement(time);\n                    ngModel.$setViewValue(time);\n                }\n\n                if(!ngModel.$pristine &&\n                    messages.hasClass(\"md-auto-hide\") &&\n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n\n                ngModel.$render();\n                inputElement[0].selectionStart = inputElement[0].selectionEnd = caretPosition;\n            }\n\n            scope.showPicker = function(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch,\n                    useUtc: scope.useUtc,\n                    ampm: scope.ampm\n                }).then(function(time) {\n                    updateTime(time);\n                });\n            };\n\n            function onInputElementEvents(event) {\n                if(event.target.value !== ngModel.$viewValue)\n                    updateTime(event.target.value);\n            }\n\n            inputElement.on(\"reset input blur\", onInputElementEvents);\n\n            scope.$on(\"$destroy\", function() {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            })\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n            \"ampm\": \"=?mdpAmpm\"\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.format = scope.format || \"HH:mm\";\n            function showPicker(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch,\n                    ampm: scope.ampm\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n\n            element.on(\"click\", showPicker);\n\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n})();"],"sourceRoot":"/source/"}